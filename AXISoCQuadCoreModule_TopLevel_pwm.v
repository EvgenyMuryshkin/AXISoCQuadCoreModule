`timescale 1ns/1ps
`default_nettype none
// PLEASE READ THIS, IT MAY SAVE YOU SOME TIME AND MONEY, THANK YOU!
// * This file was generated by Quokka FPGA Toolkit.
// * Generated code is your property, do whatever you want with it
// * Place custom code between [BEGIN USER ***] and [END USER ***].
// * CAUTION: All code outside of [USER] scope is subject to regeneration.
// * Bad things happen sometimes in developer's life,
//   it is recommended to use source control management software (e.g. git, bzr etc) to keep your custom code safe'n'sound.
// * Internal structure of code is subject to change.
//   You can use some of signals in custom code, but most likely they will not exist in future (e.g. will get shorter or gone completely)
// * Please send your feedback, comments, improvement ideas etc. to evmuryshkin@gmail.com
// * Visit https://github.com/EvgenyMuryshkin/QuokkaEvaluation to access latest version of playground
//
// DISCLAIMER:
//   Code comes AS-IS, it is your responsibility to make sure it is working as expected
//   no responsibility will be taken for any loss or damage caused by use of Quokka toolkit.
//
// System configuration name is AXISoCQuadCoreModule_TopLevel_pwm, clock frequency is 1Hz, Embedded
// FSM summary
// -- Packages
module AXISoCQuadCoreModule_TopLevel_pwm
(
	// [BEGIN USER PORTS]
	// [END USER PORTS]
	input wire BoardSignals_Clock,
	input wire BoardSignals_Reset,
	input wire BoardSignals_Running,
	input wire BoardSignals_Starting,
	input wire BoardSignals_Started,
	input wire [221:0] M2S,
	output wire oPWM0,
	output wire oPWM1,
	output wire oPWM2,
	output wire oPWM3,
	output wire oPWM4,
	output wire oPWM5,
	output wire oPWM6,
	output wire oPWM7,
	output wire [73:0] oS2M
);
	// [BEGIN USER SIGNALS]
	// [END USER SIGNALS]
	localparam HiSignal = 1'b1;
	localparam LoSignal = 1'b0;
	wire Zero = 1'b0;
	wire One = 1'b1;
	wire true = 1'b1;
	wire false = 1'b0;
	wire [31: 0] State_pwmDefault = 32'b00000000000000000000000000000000;
	wire signed [2: 0] addressBits = 3'b011;
	wire signed [2: 0] addressLSB = 3'b010;
	wire signed [4: 0] pwmCount = 5'b01000;
	wire [5: 0] AXI4PWMModule_L90F73T77_Expr = 6'b111111;
	wire AXI4PWMModule_L72F29T33_Expr = 1'b1;
	wire AXI4PWMModule_L74F29T33_Expr = 1'b1;
	wire AXI4PWMModule_L76F28T32_Expr = 1'b1;
	wire AXI4PWMModule_L73F28T32_Expr = 1'b1;
	wire AXI4PWMModule_L75F28T32_Expr = 1'b1;
	wire AXI4PWMModule_L79F13L87T14_0_pwm = 1'b0;
	wire AXI4PWMModule_L83F31T35_Expr = 1'b1;
	wire [19: 0] AXI4PWMModule_L85F39T46_Expr = 20'b11110100001001000000;
	wire AXI4PWMModule_L79F13L87T14_1_pwm = 1'b1;
	wire [1: 0] AXI4PWMModule_L79F13L87T14_2_pwm = 2'b10;
	wire [1: 0] AXI4PWMModule_L79F13L87T14_3_pwm = 2'b11;
	wire [2: 0] AXI4PWMModule_L79F13L87T14_4_pwm = 3'b100;
	wire [2: 0] AXI4PWMModule_L79F13L87T14_5_pwm = 3'b101;
	wire [2: 0] AXI4PWMModule_L79F13L87T14_6_pwm = 3'b110;
	wire [2: 0] AXI4PWMModule_L79F13L87T14_7_pwm = 3'b111;
	wire [7: 0] Inputs_M2S_R_AR_ARID;
	wire [31: 0] Inputs_M2S_R_AR_ARADDR;
	wire [7: 0] Inputs_M2S_R_AR_ARLEN;
	wire [2: 0] Inputs_M2S_R_AR_ARSIZE;
	wire [1: 0] Inputs_M2S_R_AR_ARBURST;
	wire [1: 0] Inputs_M2S_R_AR_ARLOCK;
	wire [3: 0] Inputs_M2S_R_AR_ARCACHE;
	wire [2: 0] Inputs_M2S_R_AR_ARPROT;
	wire [3: 0] Inputs_M2S_R_AR_ARQOS;
	wire [7: 0] Inputs_M2S_R_AR_ARREGION;
	wire [7: 0] Inputs_M2S_R_AR_ARUSER;
	wire Inputs_M2S_R_AR_ARVALID;
	wire Inputs_M2S_R_R_RREADY;
	wire [7: 0] Inputs_M2S_W_AW_AWID;
	wire [31: 0] Inputs_M2S_W_AW_AWADDR;
	wire [7: 0] Inputs_M2S_W_AW_AWLEN;
	wire [2: 0] Inputs_M2S_W_AW_AWSIZE;
	wire [1: 0] Inputs_M2S_W_AW_AWBURST;
	wire [1: 0] Inputs_M2S_W_AW_AWLOCK;
	wire [3: 0] Inputs_M2S_W_AW_AWCACHE;
	wire [2: 0] Inputs_M2S_W_AW_AWPROT;
	wire [3: 0] Inputs_M2S_W_AW_AWQOS;
	wire [7: 0] Inputs_M2S_W_AW_AWREGION;
	wire [7: 0] Inputs_M2S_W_AW_AWUSER;
	wire Inputs_M2S_W_AW_AWVALID;
	wire [7: 0] Inputs_M2S_W_W_WID;
	wire [3: 0] Inputs_M2S_W_W_WSTRB;
	wire Inputs_M2S_W_W_WLAST;
	wire [7: 0] Inputs_M2S_W_W_WUSER;
	wire Inputs_M2S_W_W_WVALID;
	wire Inputs_M2S_W_B_BREADY;
	reg [31: 0] NextState_pwmDurationClocks;
	reg [31: 0] NextState_waddr;
	reg [31: 0] NextState_wdata;
	wire pwmClocksWE;
	wire [2: 0] pwmWADDR;
	wire pwmWE;
	wire [2: 0] rawAddr;
	wire [7: 0] readAddr;
	wire axiSlave_inARREADY;
	wire axiSlave_inAWREADY;
	wire axiSlave_inBVALID;
	wire axiSlave_inRVALID;
	wire axiSlave_inWREADY;
	wire [221: 0] axiSlave_M2S;
	wire [31: 0] axiSlave_outARADDR;
	wire axiSlave_outARREADYConfirming;
	wire axiSlave_outARVALID;
	wire [31: 0] axiSlave_outAWADDR;
	wire axiSlave_outAWREADYConfirming;
	wire axiSlave_outAWVALID;
	wire axiSlave_outReadTXCompleting;
	wire axiSlave_outWREADYConfirming;
	wire axiSlave_outWriteTXCompleting;
	wire [3: 0] axiSlave_outWSTRB;
	wire axiSlave_outWVALID;
	wire [73: 0] axiSlave_S2M;
	wire pwms0_iActive;
	wire [31: 0] pwms0_iDurationClocks;
	wire [31: 0] pwms0_iOnClock;
	wire pwms0_oCycle;
	wire pwms0_oPWM;
	wire pwms1_iActive;
	wire [31: 0] pwms1_iDurationClocks;
	wire [31: 0] pwms1_iOnClock;
	wire pwms1_oCycle;
	wire pwms1_oPWM;
	wire pwms2_iActive;
	wire [31: 0] pwms2_iDurationClocks;
	wire [31: 0] pwms2_iOnClock;
	wire pwms2_oCycle;
	wire pwms2_oPWM;
	wire pwms3_iActive;
	wire [31: 0] pwms3_iDurationClocks;
	wire [31: 0] pwms3_iOnClock;
	wire pwms3_oCycle;
	wire pwms3_oPWM;
	wire pwms4_iActive;
	wire [31: 0] pwms4_iDurationClocks;
	wire [31: 0] pwms4_iOnClock;
	wire pwms4_oCycle;
	wire pwms4_oPWM;
	wire pwms5_iActive;
	wire [31: 0] pwms5_iDurationClocks;
	wire [31: 0] pwms5_iOnClock;
	wire pwms5_oCycle;
	wire pwms5_oPWM;
	wire pwms6_iActive;
	wire [31: 0] pwms6_iDurationClocks;
	wire [31: 0] pwms6_iOnClock;
	wire pwms6_oCycle;
	wire pwms6_oPWM;
	wire pwms7_iActive;
	wire [31: 0] pwms7_iDurationClocks;
	wire [31: 0] pwms7_iOnClock;
	wire pwms7_oCycle;
	wire pwms7_oPWM;
	wire [2: 0] AXI4PWMModule_L59F33T60_Index;
	wire [7: 0] AXI4PWMModule_L58F33T66_Index;
	wire [2: 0] AXI4PWMModule_L58F32T101_Index;
	wire [7: 0] AXI4PWMModule_L56F33T78_Index;
	wire [258: 0] AXI4PWMModule_L68F37L77T14_Object;
	wire [64: 0] AXI4PWMModule_L79F13L87T14_0_AXI4PWMModule_L81F42L86T18_Object;
	wire [64: 0] AXI4PWMModule_L79F13L87T14_1_AXI4PWMModule_L81F42L86T18_Object;
	wire [64: 0] AXI4PWMModule_L79F13L87T14_2_AXI4PWMModule_L81F42L86T18_Object;
	wire [64: 0] AXI4PWMModule_L79F13L87T14_3_AXI4PWMModule_L81F42L86T18_Object;
	wire [64: 0] AXI4PWMModule_L79F13L87T14_4_AXI4PWMModule_L81F42L86T18_Object;
	wire [64: 0] AXI4PWMModule_L79F13L87T14_5_AXI4PWMModule_L81F42L86T18_Object;
	wire [64: 0] AXI4PWMModule_L79F13L87T14_6_AXI4PWMModule_L81F42L86T18_Object;
	wire [64: 0] AXI4PWMModule_L79F13L87T14_7_AXI4PWMModule_L81F42L86T18_Object;
	wire [31: 0] AXI4PWMModule_L94F9L108T10_AXI4PWMModule_L99F35T69_Source;
	wire axiSlave_inARREADY_axiSlave_inARREADY_HardLink;
	wire axiSlave_inAWREADY_axiSlave_inAWREADY_HardLink;
	wire axiSlave_inBVALID_axiSlave_inBVALID_HardLink;
	wire [7: 0] axiSlave_inRDATA0_axiSlave_inRDATA_HardLink;
	wire [7: 0] axiSlave_inRDATA1_axiSlave_inRDATA_HardLink;
	wire [7: 0] axiSlave_inRDATA2_axiSlave_inRDATA_HardLink;
	wire [7: 0] axiSlave_inRDATA3_axiSlave_inRDATA_HardLink;
	wire axiSlave_inRVALID_axiSlave_inRVALID_HardLink;
	wire axiSlave_inWREADY_axiSlave_inWREADY_HardLink;
	wire [221: 0] axiSlave_M2S_axiSlave_M2S_HardLink;
	wire [31: 0] axiSlave_outARADDR_axiSlave_outARADDR_HardLink;
	wire axiSlave_outARREADYConfirming_axiSlave_outARREADYConfirming_HardLink;
	wire axiSlave_outARVALID_axiSlave_outARVALID_HardLink;
	wire [31: 0] axiSlave_outAWADDR_axiSlave_outAWADDR_HardLink;
	wire axiSlave_outAWREADYConfirming_axiSlave_outAWREADYConfirming_HardLink;
	wire axiSlave_outAWVALID_axiSlave_outAWVALID_HardLink;
	wire axiSlave_outReadTXCompleting_axiSlave_outReadTXCompleting_HardLink;
	wire [7: 0] axiSlave_outWDATA0_axiSlave_outWDATA_HardLink;
	wire [7: 0] axiSlave_outWDATA1_axiSlave_outWDATA_HardLink;
	wire [7: 0] axiSlave_outWDATA2_axiSlave_outWDATA_HardLink;
	wire [7: 0] axiSlave_outWDATA3_axiSlave_outWDATA_HardLink;
	wire axiSlave_outWREADYConfirming_axiSlave_outWREADYConfirming_HardLink;
	wire axiSlave_outWriteTXCompleting_axiSlave_outWriteTXCompleting_HardLink;
	wire [3: 0] axiSlave_outWSTRB_axiSlave_outWSTRB_HardLink;
	wire axiSlave_outWVALID_axiSlave_outWVALID_HardLink;
	wire [73: 0] axiSlave_S2M_axiSlave_S2M_HardLink;
	wire pwms0_iActive_pwms0_iActive_HardLink;
	wire [31: 0] pwms0_iDurationClocks_pwms0_iDurationClocks_HardLink;
	wire [31: 0] pwms0_iOnClock_pwms0_iOnClock_HardLink;
	wire pwms0_oCycle_pwms0_oCycle_HardLink;
	wire pwms0_oPWM_pwms0_oPWM_HardLink;
	wire pwms1_iActive_pwms1_iActive_HardLink;
	wire [31: 0] pwms1_iDurationClocks_pwms1_iDurationClocks_HardLink;
	wire [31: 0] pwms1_iOnClock_pwms1_iOnClock_HardLink;
	wire pwms1_oCycle_pwms1_oCycle_HardLink;
	wire pwms1_oPWM_pwms1_oPWM_HardLink;
	wire pwms2_iActive_pwms2_iActive_HardLink;
	wire [31: 0] pwms2_iDurationClocks_pwms2_iDurationClocks_HardLink;
	wire [31: 0] pwms2_iOnClock_pwms2_iOnClock_HardLink;
	wire pwms2_oCycle_pwms2_oCycle_HardLink;
	wire pwms2_oPWM_pwms2_oPWM_HardLink;
	wire pwms3_iActive_pwms3_iActive_HardLink;
	wire [31: 0] pwms3_iDurationClocks_pwms3_iDurationClocks_HardLink;
	wire [31: 0] pwms3_iOnClock_pwms3_iOnClock_HardLink;
	wire pwms3_oCycle_pwms3_oCycle_HardLink;
	wire pwms3_oPWM_pwms3_oPWM_HardLink;
	wire pwms4_iActive_pwms4_iActive_HardLink;
	wire [31: 0] pwms4_iDurationClocks_pwms4_iDurationClocks_HardLink;
	wire [31: 0] pwms4_iOnClock_pwms4_iOnClock_HardLink;
	wire pwms4_oCycle_pwms4_oCycle_HardLink;
	wire pwms4_oPWM_pwms4_oPWM_HardLink;
	wire pwms5_iActive_pwms5_iActive_HardLink;
	wire [31: 0] pwms5_iDurationClocks_pwms5_iDurationClocks_HardLink;
	wire [31: 0] pwms5_iOnClock_pwms5_iOnClock_HardLink;
	wire pwms5_oCycle_pwms5_oCycle_HardLink;
	wire pwms5_oPWM_pwms5_oPWM_HardLink;
	wire pwms6_iActive_pwms6_iActive_HardLink;
	wire [31: 0] pwms6_iDurationClocks_pwms6_iDurationClocks_HardLink;
	wire [31: 0] pwms6_iOnClock_pwms6_iOnClock_HardLink;
	wire pwms6_oCycle_pwms6_oCycle_HardLink;
	wire pwms6_oPWM_pwms6_oPWM_HardLink;
	wire pwms7_iActive_pwms7_iActive_HardLink;
	wire [31: 0] pwms7_iDurationClocks_pwms7_iDurationClocks_HardLink;
	wire [31: 0] pwms7_iOnClock_pwms7_iOnClock_HardLink;
	wire pwms7_oCycle_pwms7_oCycle_HardLink;
	wire pwms7_oPWM_pwms7_oPWM_HardLink;
	reg [31: 0] State_pwmDurationClocks = 32'b00000000000000000000000000000000;
	wire [31: 0] State_pwmDurationClocksDefault = 32'b00000000000011110100001001000000;
	reg [31: 0] State_waddr = 32'b00000000000000000000000000000000;
	wire [31: 0] State_waddrDefault = 32'b00000000000000000000000000000000;
	reg [31: 0] State_wdata = 32'b00000000000000000000000000000000;
	wire [31: 0] State_wdataDefault = 32'b00000000000000000000000000000000;
	wire AXI4PWMModule_L90F29T77_Expr;
	wire AXI4PWMModule_L90F29T77_Expr_1;
	wire AXI4PWMModule_L90F29T77_Expr_2;
	wire AXI4PWMModule_L91F23T90_Expr;
	wire AXI4PWMModule_L91F23T90_Expr_1;
	wire AXI4PWMModule_L91F23T90_Expr_2;
	wire AXI4PWMModule_L91F23T74_Expr;
	wire AXI4PWMModule_L91F23T74_Expr_1;
	wire AXI4PWMModule_L91F23T74_Expr_2;
	wire AXI4PWMModule_L91F78T90_Expr;
	wire AXI4PWMModule_L91F78T90_Expr_1;
	wire [7: 0] AXI4PWMModule_L58F33T80_Expr;
	wire [7: 0] AXI4PWMModule_L58F33T80_Expr_1;
	wire [7: 0] AXI4PWMModule_L56F33T92_Expr;
	wire [7: 0] AXI4PWMModule_L56F33T92_Expr_1;
	wire AXI4PWMModule_L90F62T77_Expr;
	wire signed [6: 0] AXI4PWMModule_L90F62T77_ExprLhs;
	wire signed [6: 0] AXI4PWMModule_L90F62T77_ExprRhs;
	wire AXI4PWMModule_L91F56T74_Expr;
	wire signed [5: 0] AXI4PWMModule_L91F56T74_ExprLhs;
	wire signed [5: 0] AXI4PWMModule_L91F56T74_ExprRhs;
	wire [7 : 0] Inputs_M2S_W_W_WDATA [0 : 3];
	integer State_pwm_Iterator;
	reg [31 : 0] State_pwm [0 : 7];
	initial
	begin : Init_State_pwm
		for (State_pwm_Iterator = 0; State_pwm_Iterator < 8; State_pwm_Iterator = State_pwm_Iterator + 1)
			State_pwm[State_pwm_Iterator] = 0;
	end
	integer NextState_pwm_Iterator;
	reg [31 : 0] NextState_pwm [0 : 7];
	initial
	begin : Init_NextState_pwm
		for (NextState_pwm_Iterator = 0; NextState_pwm_Iterator < 8; NextState_pwm_Iterator = NextState_pwm_Iterator + 1)
			NextState_pwm[NextState_pwm_Iterator] = 0;
	end
	wire [7 : 0] axiSlave_inRDATA [0 : 3];
	wire [7 : 0] axiSlave_outWDATA [0 : 3];
	wire AXI4PWMModule_L62F31T65_Enumerable [0 : 7];
	always @ (posedge BoardSignals_Clock)
	begin
		if ((BoardSignals_Reset == 1))
		begin
			State_pwmDurationClocks <= State_pwmDurationClocksDefault;
			State_waddr <= State_waddrDefault;
			State_wdata <= State_wdataDefault;
		end
		else
		begin
			State_pwmDurationClocks <= NextState_pwmDurationClocks;
			State_waddr <= NextState_waddr;
			State_wdata <= NextState_wdata;
		end
	end
	always @ (posedge BoardSignals_Clock)
	begin
		if ((BoardSignals_Reset == 1))
		begin
			for (State_pwm_Iterator = 0; (State_pwm_Iterator < 8); State_pwm_Iterator = (State_pwm_Iterator + 1))
			begin
				State_pwm[State_pwm_Iterator] <= State_pwmDefault;
			end
		end
		else
		begin
			for (State_pwm_Iterator = 0; (State_pwm_Iterator < 8); State_pwm_Iterator = (State_pwm_Iterator + 1))
			begin
				State_pwm[State_pwm_Iterator] <= NextState_pwm[State_pwm_Iterator];
			end
		end
	end
	assign AXI4PWMModule_L90F62T77_Expr = AXI4PWMModule_L90F62T77_ExprLhs == AXI4PWMModule_L90F62T77_ExprRhs ? 1'b1 : 1'b0;
	assign AXI4PWMModule_L91F56T74_Expr = AXI4PWMModule_L91F56T74_ExprLhs < AXI4PWMModule_L91F56T74_ExprRhs ? 1'b1 : 1'b0;
	assign AXI4PWMModule_L90F29T77_Expr = AXI4PWMModule_L90F29T77_Expr_1 & AXI4PWMModule_L90F29T77_Expr_2;
	assign AXI4PWMModule_L91F23T90_Expr = AXI4PWMModule_L91F23T90_Expr_1 & AXI4PWMModule_L91F23T90_Expr_2;
	assign AXI4PWMModule_L91F23T74_Expr = AXI4PWMModule_L91F23T74_Expr_1 & AXI4PWMModule_L91F23T74_Expr_2;
	assign AXI4PWMModule_L91F78T90_Expr = ~AXI4PWMModule_L91F78T90_Expr_1;
	// Output: AXI4PWMModule_L58F33T80_Expr, Width: 8, ShiftBy: 2, Sources: 1
	assign AXI4PWMModule_L58F33T80_Expr[0] = AXI4PWMModule_L58F33T80_Expr_1[2];
	assign AXI4PWMModule_L58F33T80_Expr[1] = AXI4PWMModule_L58F33T80_Expr_1[3];
	assign AXI4PWMModule_L58F33T80_Expr[2] = AXI4PWMModule_L58F33T80_Expr_1[4];
	assign AXI4PWMModule_L58F33T80_Expr[3] = AXI4PWMModule_L58F33T80_Expr_1[5];
	assign AXI4PWMModule_L58F33T80_Expr[4] = AXI4PWMModule_L58F33T80_Expr_1[6];
	assign AXI4PWMModule_L58F33T80_Expr[5] = AXI4PWMModule_L58F33T80_Expr_1[7];
	assign AXI4PWMModule_L58F33T80_Expr[6] = 0;
	assign AXI4PWMModule_L58F33T80_Expr[7] = 0;
	// Output: AXI4PWMModule_L56F33T92_Expr, Width: 8, ShiftBy: 2, Sources: 1
	assign AXI4PWMModule_L56F33T92_Expr[0] = AXI4PWMModule_L56F33T92_Expr_1[2];
	assign AXI4PWMModule_L56F33T92_Expr[1] = AXI4PWMModule_L56F33T92_Expr_1[3];
	assign AXI4PWMModule_L56F33T92_Expr[2] = AXI4PWMModule_L56F33T92_Expr_1[4];
	assign AXI4PWMModule_L56F33T92_Expr[3] = AXI4PWMModule_L56F33T92_Expr_1[5];
	assign AXI4PWMModule_L56F33T92_Expr[4] = AXI4PWMModule_L56F33T92_Expr_1[6];
	assign AXI4PWMModule_L56F33T92_Expr[5] = AXI4PWMModule_L56F33T92_Expr_1[7];
	assign AXI4PWMModule_L56F33T92_Expr[6] = 0;
	assign AXI4PWMModule_L56F33T92_Expr[7] = 0;
	AXISoCQuadCoreModule_TopLevel_pwm_axiSlave
	AXISoCQuadCoreModule_TopLevel_pwm_axiSlave
	(
		// [BEGIN USER MAP FOR axiSlave]
		// [END USER MAP FOR axiSlave]
		.BoardSignals_Clock (BoardSignals_Clock),
		.BoardSignals_Reset (BoardSignals_Reset),
		.BoardSignals_Running (BoardSignals_Running),
		.BoardSignals_Starting (BoardSignals_Starting),
		.BoardSignals_Started (BoardSignals_Started),
		.inARREADY (axiSlave_inARREADY_axiSlave_inARREADY_HardLink),
		.inAWREADY (axiSlave_inAWREADY_axiSlave_inAWREADY_HardLink),
		.inBVALID (axiSlave_inBVALID_axiSlave_inBVALID_HardLink),
		.inRDATA0 (axiSlave_inRDATA0_axiSlave_inRDATA_HardLink),
		.inRDATA1 (axiSlave_inRDATA1_axiSlave_inRDATA_HardLink),
		.inRDATA2 (axiSlave_inRDATA2_axiSlave_inRDATA_HardLink),
		.inRDATA3 (axiSlave_inRDATA3_axiSlave_inRDATA_HardLink),
		.inRVALID (axiSlave_inRVALID_axiSlave_inRVALID_HardLink),
		.inWREADY (axiSlave_inWREADY_axiSlave_inWREADY_HardLink),
		.M2S (axiSlave_M2S_axiSlave_M2S_HardLink),
		.outARADDR (axiSlave_outARADDR_axiSlave_outARADDR_HardLink),
		.outARREADYConfirming (axiSlave_outARREADYConfirming_axiSlave_outARREADYConfirming_HardLink),
		.outARVALID (axiSlave_outARVALID_axiSlave_outARVALID_HardLink),
		.outAWADDR (axiSlave_outAWADDR_axiSlave_outAWADDR_HardLink),
		.outAWREADYConfirming (axiSlave_outAWREADYConfirming_axiSlave_outAWREADYConfirming_HardLink),
		.outAWVALID (axiSlave_outAWVALID_axiSlave_outAWVALID_HardLink),
		.outReadTXCompleting (axiSlave_outReadTXCompleting_axiSlave_outReadTXCompleting_HardLink),
		.outWDATA0 (axiSlave_outWDATA0_axiSlave_outWDATA_HardLink),
		.outWDATA1 (axiSlave_outWDATA1_axiSlave_outWDATA_HardLink),
		.outWDATA2 (axiSlave_outWDATA2_axiSlave_outWDATA_HardLink),
		.outWDATA3 (axiSlave_outWDATA3_axiSlave_outWDATA_HardLink),
		.outWREADYConfirming (axiSlave_outWREADYConfirming_axiSlave_outWREADYConfirming_HardLink),
		.outWriteTXCompleting (axiSlave_outWriteTXCompleting_axiSlave_outWriteTXCompleting_HardLink),
		.outWSTRB (axiSlave_outWSTRB_axiSlave_outWSTRB_HardLink),
		.outWVALID (axiSlave_outWVALID_axiSlave_outWVALID_HardLink),
		.S2M (axiSlave_S2M_axiSlave_S2M_HardLink)
	);
	AXISoCQuadCoreModule_TopLevel_pwm_pwms0
	AXISoCQuadCoreModule_TopLevel_pwm_pwms0
	(
		// [BEGIN USER MAP FOR pwms0]
		// [END USER MAP FOR pwms0]
		.BoardSignals_Clock (BoardSignals_Clock),
		.BoardSignals_Reset (BoardSignals_Reset),
		.BoardSignals_Running (BoardSignals_Running),
		.BoardSignals_Starting (BoardSignals_Starting),
		.BoardSignals_Started (BoardSignals_Started),
		.iActive (pwms0_iActive_pwms0_iActive_HardLink),
		.iDurationClocks (pwms0_iDurationClocks_pwms0_iDurationClocks_HardLink),
		.iOnClock (pwms0_iOnClock_pwms0_iOnClock_HardLink),
		.oCycle (pwms0_oCycle_pwms0_oCycle_HardLink),
		.oPWM (pwms0_oPWM_pwms0_oPWM_HardLink)
	);
	AXISoCQuadCoreModule_TopLevel_pwm_pwms1
	AXISoCQuadCoreModule_TopLevel_pwm_pwms1
	(
		// [BEGIN USER MAP FOR pwms1]
		// [END USER MAP FOR pwms1]
		.BoardSignals_Clock (BoardSignals_Clock),
		.BoardSignals_Reset (BoardSignals_Reset),
		.BoardSignals_Running (BoardSignals_Running),
		.BoardSignals_Starting (BoardSignals_Starting),
		.BoardSignals_Started (BoardSignals_Started),
		.iActive (pwms1_iActive_pwms1_iActive_HardLink),
		.iDurationClocks (pwms1_iDurationClocks_pwms1_iDurationClocks_HardLink),
		.iOnClock (pwms1_iOnClock_pwms1_iOnClock_HardLink),
		.oCycle (pwms1_oCycle_pwms1_oCycle_HardLink),
		.oPWM (pwms1_oPWM_pwms1_oPWM_HardLink)
	);
	AXISoCQuadCoreModule_TopLevel_pwm_pwms2
	AXISoCQuadCoreModule_TopLevel_pwm_pwms2
	(
		// [BEGIN USER MAP FOR pwms2]
		// [END USER MAP FOR pwms2]
		.BoardSignals_Clock (BoardSignals_Clock),
		.BoardSignals_Reset (BoardSignals_Reset),
		.BoardSignals_Running (BoardSignals_Running),
		.BoardSignals_Starting (BoardSignals_Starting),
		.BoardSignals_Started (BoardSignals_Started),
		.iActive (pwms2_iActive_pwms2_iActive_HardLink),
		.iDurationClocks (pwms2_iDurationClocks_pwms2_iDurationClocks_HardLink),
		.iOnClock (pwms2_iOnClock_pwms2_iOnClock_HardLink),
		.oCycle (pwms2_oCycle_pwms2_oCycle_HardLink),
		.oPWM (pwms2_oPWM_pwms2_oPWM_HardLink)
	);
	AXISoCQuadCoreModule_TopLevel_pwm_pwms3
	AXISoCQuadCoreModule_TopLevel_pwm_pwms3
	(
		// [BEGIN USER MAP FOR pwms3]
		// [END USER MAP FOR pwms3]
		.BoardSignals_Clock (BoardSignals_Clock),
		.BoardSignals_Reset (BoardSignals_Reset),
		.BoardSignals_Running (BoardSignals_Running),
		.BoardSignals_Starting (BoardSignals_Starting),
		.BoardSignals_Started (BoardSignals_Started),
		.iActive (pwms3_iActive_pwms3_iActive_HardLink),
		.iDurationClocks (pwms3_iDurationClocks_pwms3_iDurationClocks_HardLink),
		.iOnClock (pwms3_iOnClock_pwms3_iOnClock_HardLink),
		.oCycle (pwms3_oCycle_pwms3_oCycle_HardLink),
		.oPWM (pwms3_oPWM_pwms3_oPWM_HardLink)
	);
	AXISoCQuadCoreModule_TopLevel_pwm_pwms4
	AXISoCQuadCoreModule_TopLevel_pwm_pwms4
	(
		// [BEGIN USER MAP FOR pwms4]
		// [END USER MAP FOR pwms4]
		.BoardSignals_Clock (BoardSignals_Clock),
		.BoardSignals_Reset (BoardSignals_Reset),
		.BoardSignals_Running (BoardSignals_Running),
		.BoardSignals_Starting (BoardSignals_Starting),
		.BoardSignals_Started (BoardSignals_Started),
		.iActive (pwms4_iActive_pwms4_iActive_HardLink),
		.iDurationClocks (pwms4_iDurationClocks_pwms4_iDurationClocks_HardLink),
		.iOnClock (pwms4_iOnClock_pwms4_iOnClock_HardLink),
		.oCycle (pwms4_oCycle_pwms4_oCycle_HardLink),
		.oPWM (pwms4_oPWM_pwms4_oPWM_HardLink)
	);
	AXISoCQuadCoreModule_TopLevel_pwm_pwms5
	AXISoCQuadCoreModule_TopLevel_pwm_pwms5
	(
		// [BEGIN USER MAP FOR pwms5]
		// [END USER MAP FOR pwms5]
		.BoardSignals_Clock (BoardSignals_Clock),
		.BoardSignals_Reset (BoardSignals_Reset),
		.BoardSignals_Running (BoardSignals_Running),
		.BoardSignals_Starting (BoardSignals_Starting),
		.BoardSignals_Started (BoardSignals_Started),
		.iActive (pwms5_iActive_pwms5_iActive_HardLink),
		.iDurationClocks (pwms5_iDurationClocks_pwms5_iDurationClocks_HardLink),
		.iOnClock (pwms5_iOnClock_pwms5_iOnClock_HardLink),
		.oCycle (pwms5_oCycle_pwms5_oCycle_HardLink),
		.oPWM (pwms5_oPWM_pwms5_oPWM_HardLink)
	);
	AXISoCQuadCoreModule_TopLevel_pwm_pwms6
	AXISoCQuadCoreModule_TopLevel_pwm_pwms6
	(
		// [BEGIN USER MAP FOR pwms6]
		// [END USER MAP FOR pwms6]
		.BoardSignals_Clock (BoardSignals_Clock),
		.BoardSignals_Reset (BoardSignals_Reset),
		.BoardSignals_Running (BoardSignals_Running),
		.BoardSignals_Starting (BoardSignals_Starting),
		.BoardSignals_Started (BoardSignals_Started),
		.iActive (pwms6_iActive_pwms6_iActive_HardLink),
		.iDurationClocks (pwms6_iDurationClocks_pwms6_iDurationClocks_HardLink),
		.iOnClock (pwms6_iOnClock_pwms6_iOnClock_HardLink),
		.oCycle (pwms6_oCycle_pwms6_oCycle_HardLink),
		.oPWM (pwms6_oPWM_pwms6_oPWM_HardLink)
	);
	AXISoCQuadCoreModule_TopLevel_pwm_pwms7
	AXISoCQuadCoreModule_TopLevel_pwm_pwms7
	(
		// [BEGIN USER MAP FOR pwms7]
		// [END USER MAP FOR pwms7]
		.BoardSignals_Clock (BoardSignals_Clock),
		.BoardSignals_Reset (BoardSignals_Reset),
		.BoardSignals_Running (BoardSignals_Running),
		.BoardSignals_Starting (BoardSignals_Starting),
		.BoardSignals_Started (BoardSignals_Started),
		.iActive (pwms7_iActive_pwms7_iActive_HardLink),
		.iDurationClocks (pwms7_iDurationClocks_pwms7_iDurationClocks_HardLink),
		.iOnClock (pwms7_iOnClock_pwms7_iOnClock_HardLink),
		.oCycle (pwms7_oCycle_pwms7_oCycle_HardLink),
		.oPWM (pwms7_oPWM_pwms7_oPWM_HardLink)
	);
	always @ (*)
	begin
		NextState_pwm_Iterator = 0;
		for (NextState_pwm_Iterator = 0; (NextState_pwm_Iterator < 8); NextState_pwm_Iterator = (NextState_pwm_Iterator + 1))
		begin
			NextState_pwm[NextState_pwm_Iterator] = State_pwm[NextState_pwm_Iterator];
		end
		NextState_pwmDurationClocks = State_pwmDurationClocks;
		NextState_waddr = State_waddr;
		NextState_wdata = State_wdata;
		if ((axiSlave_outAWREADYConfirming == 1))
		begin
			NextState_waddr = axiSlave_outAWADDR;
		end
		if ((axiSlave_outWREADYConfirming == 1))
		begin
			NextState_wdata = AXI4PWMModule_L94F9L108T10_AXI4PWMModule_L99F35T69_Source;
		end
		if ((pwmClocksWE == 1))
		begin
			NextState_pwmDurationClocks = State_wdata;
		end
		if ((pwmWE == 1))
		begin
			NextState_pwm[pwmWADDR] = State_wdata;
		end
	end
	assign AXI4PWMModule_L90F62T77_ExprLhs = {
		{4{1'b0}},
		rawAddr
	}
	;
	assign AXI4PWMModule_L90F62T77_ExprRhs = {
		1'b0,
		AXI4PWMModule_L90F73T77_Expr
	}
	;
	assign AXI4PWMModule_L91F56T74_ExprLhs = {
		{3{1'b0}},
		rawAddr
	}
	;
	assign AXI4PWMModule_L91F56T74_ExprRhs = {
		pwmCount[4],
		pwmCount
	}
	;
	assign AXI4PWMModule_L90F29T77_Expr_1 = axiSlave_outWriteTXCompleting;
	assign AXI4PWMModule_L90F29T77_Expr_2 = AXI4PWMModule_L90F62T77_Expr;
	assign AXI4PWMModule_L91F23T90_Expr_1 = AXI4PWMModule_L91F23T74_Expr;
	assign AXI4PWMModule_L91F23T90_Expr_2 = AXI4PWMModule_L91F78T90_Expr;
	assign AXI4PWMModule_L91F23T74_Expr_1 = axiSlave_outWriteTXCompleting;
	assign AXI4PWMModule_L91F23T74_Expr_2 = AXI4PWMModule_L91F56T74_Expr;
	assign AXI4PWMModule_L91F78T90_Expr_1 = pwmClocksWE;
	assign AXI4PWMModule_L58F33T80_Expr_1 = AXI4PWMModule_L58F33T66_Index;
	assign AXI4PWMModule_L56F33T92_Expr_1 = AXI4PWMModule_L56F33T78_Index;
	assign Inputs_M2S_W_B_BREADY = M2S[221];
	assign Inputs_M2S_W_W_WVALID = M2S[220];
	assign Inputs_M2S_W_W_WUSER = M2S[219:212];
	assign Inputs_M2S_W_W_WLAST = M2S[211];
	assign Inputs_M2S_W_W_WSTRB = M2S[210:207];
	assign Inputs_M2S_W_W_WDATA[3] = M2S[206:199];
	assign Inputs_M2S_W_W_WDATA[2] = M2S[198:191];
	assign Inputs_M2S_W_W_WDATA[1] = M2S[190:183];
	assign Inputs_M2S_W_W_WDATA[0] = M2S[182:175];
	assign Inputs_M2S_W_W_WID = M2S[174:167];
	assign Inputs_M2S_W_AW_AWVALID = M2S[166];
	assign Inputs_M2S_W_AW_AWUSER = M2S[165:158];
	assign Inputs_M2S_W_AW_AWREGION = M2S[157:150];
	assign Inputs_M2S_W_AW_AWQOS = M2S[149:146];
	assign Inputs_M2S_W_AW_AWPROT = M2S[145:143];
	assign Inputs_M2S_W_AW_AWCACHE = M2S[142:139];
	assign Inputs_M2S_W_AW_AWLOCK = M2S[138:137];
	assign Inputs_M2S_W_AW_AWBURST = M2S[136:135];
	assign Inputs_M2S_W_AW_AWSIZE = M2S[134:132];
	assign Inputs_M2S_W_AW_AWLEN = M2S[131:124];
	assign Inputs_M2S_W_AW_AWADDR = M2S[123:92];
	assign Inputs_M2S_W_AW_AWID = M2S[91:84];
	assign Inputs_M2S_R_R_RREADY = M2S[83];
	assign Inputs_M2S_R_AR_ARVALID = M2S[82];
	assign Inputs_M2S_R_AR_ARUSER = M2S[81:74];
	assign Inputs_M2S_R_AR_ARREGION = M2S[73:66];
	assign Inputs_M2S_R_AR_ARQOS = M2S[65:62];
	assign Inputs_M2S_R_AR_ARPROT = M2S[61:59];
	assign Inputs_M2S_R_AR_ARCACHE = M2S[58:55];
	assign Inputs_M2S_R_AR_ARLOCK = M2S[54:53];
	assign Inputs_M2S_R_AR_ARBURST = M2S[52:51];
	assign Inputs_M2S_R_AR_ARSIZE = M2S[50:48];
	assign Inputs_M2S_R_AR_ARLEN = M2S[47:40];
	assign Inputs_M2S_R_AR_ARADDR = M2S[39:8];
	assign Inputs_M2S_R_AR_ARID = M2S[7:0];
	assign pwmClocksWE = AXI4PWMModule_L90F29T77_Expr;
	assign AXI4PWMModule_L59F33T60_Index = rawAddr[2:0];
	assign pwmWADDR = AXI4PWMModule_L59F33T60_Index;
	assign pwmWE = AXI4PWMModule_L91F23T90_Expr;
	assign AXI4PWMModule_L58F33T66_Index = State_waddr[7:0];
	assign AXI4PWMModule_L58F32T101_Index = AXI4PWMModule_L58F33T80_Expr[2:0];
	assign rawAddr = AXI4PWMModule_L58F32T101_Index;
	assign AXI4PWMModule_L56F33T78_Index = Inputs_M2S_R_AR_ARADDR[7:0];
	assign readAddr = AXI4PWMModule_L56F33T92_Expr;
	assign AXI4PWMModule_L68F37L77T14_Object[0] = AXI4PWMModule_L72F29T33_Expr;
	assign AXI4PWMModule_L68F37L77T14_Object[1] = AXI4PWMModule_L74F29T33_Expr;
	assign AXI4PWMModule_L68F37L77T14_Object[2] = AXI4PWMModule_L76F28T32_Expr;
	assign AXI4PWMModule_L68F37L77T14_Object[34:3] = State_pwm[readAddr];
	assign AXI4PWMModule_L68F37L77T14_Object[35] = AXI4PWMModule_L73F28T32_Expr;
	assign AXI4PWMModule_L68F37L77T14_Object[36] = AXI4PWMModule_L75F28T32_Expr;
	assign AXI4PWMModule_L68F37L77T14_Object[44:37] = Inputs_M2S_R_AR_ARID;
	assign AXI4PWMModule_L68F37L77T14_Object[76:45] = Inputs_M2S_R_AR_ARADDR;
	assign AXI4PWMModule_L68F37L77T14_Object[84:77] = Inputs_M2S_R_AR_ARLEN;
	assign AXI4PWMModule_L68F37L77T14_Object[87:85] = Inputs_M2S_R_AR_ARSIZE;
	assign AXI4PWMModule_L68F37L77T14_Object[89:88] = Inputs_M2S_R_AR_ARBURST;
	assign AXI4PWMModule_L68F37L77T14_Object[91:90] = Inputs_M2S_R_AR_ARLOCK;
	assign AXI4PWMModule_L68F37L77T14_Object[95:92] = Inputs_M2S_R_AR_ARCACHE;
	assign AXI4PWMModule_L68F37L77T14_Object[98:96] = Inputs_M2S_R_AR_ARPROT;
	assign AXI4PWMModule_L68F37L77T14_Object[102:99] = Inputs_M2S_R_AR_ARQOS;
	assign AXI4PWMModule_L68F37L77T14_Object[110:103] = Inputs_M2S_R_AR_ARREGION;
	assign AXI4PWMModule_L68F37L77T14_Object[118:111] = Inputs_M2S_R_AR_ARUSER;
	assign AXI4PWMModule_L68F37L77T14_Object[119] = Inputs_M2S_R_AR_ARVALID;
	assign AXI4PWMModule_L68F37L77T14_Object[120] = Inputs_M2S_R_R_RREADY;
	assign AXI4PWMModule_L68F37L77T14_Object[128:121] = Inputs_M2S_W_AW_AWID;
	assign AXI4PWMModule_L68F37L77T14_Object[160:129] = Inputs_M2S_W_AW_AWADDR;
	assign AXI4PWMModule_L68F37L77T14_Object[168:161] = Inputs_M2S_W_AW_AWLEN;
	assign AXI4PWMModule_L68F37L77T14_Object[171:169] = Inputs_M2S_W_AW_AWSIZE;
	assign AXI4PWMModule_L68F37L77T14_Object[173:172] = Inputs_M2S_W_AW_AWBURST;
	assign AXI4PWMModule_L68F37L77T14_Object[175:174] = Inputs_M2S_W_AW_AWLOCK;
	assign AXI4PWMModule_L68F37L77T14_Object[179:176] = Inputs_M2S_W_AW_AWCACHE;
	assign AXI4PWMModule_L68F37L77T14_Object[182:180] = Inputs_M2S_W_AW_AWPROT;
	assign AXI4PWMModule_L68F37L77T14_Object[186:183] = Inputs_M2S_W_AW_AWQOS;
	assign AXI4PWMModule_L68F37L77T14_Object[194:187] = Inputs_M2S_W_AW_AWREGION;
	assign AXI4PWMModule_L68F37L77T14_Object[202:195] = Inputs_M2S_W_AW_AWUSER;
	assign AXI4PWMModule_L68F37L77T14_Object[203] = Inputs_M2S_W_AW_AWVALID;
	assign AXI4PWMModule_L68F37L77T14_Object[211:204] = Inputs_M2S_W_W_WID;
	assign AXI4PWMModule_L68F37L77T14_Object[243:212] = {
		Inputs_M2S_W_W_WDATA[3],
		Inputs_M2S_W_W_WDATA[2],
		Inputs_M2S_W_W_WDATA[1],
		Inputs_M2S_W_W_WDATA[0]
	}
	;
	assign AXI4PWMModule_L68F37L77T14_Object[247:244] = Inputs_M2S_W_W_WSTRB;
	assign AXI4PWMModule_L68F37L77T14_Object[248] = Inputs_M2S_W_W_WLAST;
	assign AXI4PWMModule_L68F37L77T14_Object[256:249] = Inputs_M2S_W_W_WUSER;
	assign AXI4PWMModule_L68F37L77T14_Object[257] = Inputs_M2S_W_W_WVALID;
	assign AXI4PWMModule_L68F37L77T14_Object[258] = Inputs_M2S_W_B_BREADY;
	assign axiSlave_M2S = AXI4PWMModule_L68F37L77T14_Object[258:37];
	assign axiSlave_inWREADY = AXI4PWMModule_L68F37L77T14_Object[36];
	assign axiSlave_inRVALID = AXI4PWMModule_L68F37L77T14_Object[35];
	assign axiSlave_inRDATA[3] = AXI4PWMModule_L68F37L77T14_Object[34:27];
	assign axiSlave_inRDATA[2] = AXI4PWMModule_L68F37L77T14_Object[26:19];
	assign axiSlave_inRDATA[1] = AXI4PWMModule_L68F37L77T14_Object[18:11];
	assign axiSlave_inRDATA[0] = AXI4PWMModule_L68F37L77T14_Object[10:3];
	assign axiSlave_inBVALID = AXI4PWMModule_L68F37L77T14_Object[2];
	assign axiSlave_inAWREADY = AXI4PWMModule_L68F37L77T14_Object[1];
	assign axiSlave_inARREADY = AXI4PWMModule_L68F37L77T14_Object[0];
	assign AXI4PWMModule_L79F13L87T14_0_AXI4PWMModule_L81F42L86T18_Object[0] = AXI4PWMModule_L83F31T35_Expr;
	assign AXI4PWMModule_L79F13L87T14_0_AXI4PWMModule_L81F42L86T18_Object[32:1] = {
		{12{1'b0}},
		AXI4PWMModule_L85F39T46_Expr
	}
	;
	assign AXI4PWMModule_L79F13L87T14_0_AXI4PWMModule_L81F42L86T18_Object[64:33] = State_pwm[0];
	assign pwms0_iOnClock = AXI4PWMModule_L79F13L87T14_0_AXI4PWMModule_L81F42L86T18_Object[64:33];
	assign pwms0_iDurationClocks = AXI4PWMModule_L79F13L87T14_0_AXI4PWMModule_L81F42L86T18_Object[32:1];
	assign pwms0_iActive = AXI4PWMModule_L79F13L87T14_0_AXI4PWMModule_L81F42L86T18_Object[0];
	assign AXI4PWMModule_L79F13L87T14_1_AXI4PWMModule_L81F42L86T18_Object[0] = AXI4PWMModule_L83F31T35_Expr;
	assign AXI4PWMModule_L79F13L87T14_1_AXI4PWMModule_L81F42L86T18_Object[32:1] = {
		{12{1'b0}},
		AXI4PWMModule_L85F39T46_Expr
	}
	;
	assign AXI4PWMModule_L79F13L87T14_1_AXI4PWMModule_L81F42L86T18_Object[64:33] = State_pwm[1];
	assign pwms1_iOnClock = AXI4PWMModule_L79F13L87T14_1_AXI4PWMModule_L81F42L86T18_Object[64:33];
	assign pwms1_iDurationClocks = AXI4PWMModule_L79F13L87T14_1_AXI4PWMModule_L81F42L86T18_Object[32:1];
	assign pwms1_iActive = AXI4PWMModule_L79F13L87T14_1_AXI4PWMModule_L81F42L86T18_Object[0];
	assign AXI4PWMModule_L79F13L87T14_2_AXI4PWMModule_L81F42L86T18_Object[0] = AXI4PWMModule_L83F31T35_Expr;
	assign AXI4PWMModule_L79F13L87T14_2_AXI4PWMModule_L81F42L86T18_Object[32:1] = {
		{12{1'b0}},
		AXI4PWMModule_L85F39T46_Expr
	}
	;
	assign AXI4PWMModule_L79F13L87T14_2_AXI4PWMModule_L81F42L86T18_Object[64:33] = State_pwm[2];
	assign pwms2_iOnClock = AXI4PWMModule_L79F13L87T14_2_AXI4PWMModule_L81F42L86T18_Object[64:33];
	assign pwms2_iDurationClocks = AXI4PWMModule_L79F13L87T14_2_AXI4PWMModule_L81F42L86T18_Object[32:1];
	assign pwms2_iActive = AXI4PWMModule_L79F13L87T14_2_AXI4PWMModule_L81F42L86T18_Object[0];
	assign AXI4PWMModule_L79F13L87T14_3_AXI4PWMModule_L81F42L86T18_Object[0] = AXI4PWMModule_L83F31T35_Expr;
	assign AXI4PWMModule_L79F13L87T14_3_AXI4PWMModule_L81F42L86T18_Object[32:1] = {
		{12{1'b0}},
		AXI4PWMModule_L85F39T46_Expr
	}
	;
	assign AXI4PWMModule_L79F13L87T14_3_AXI4PWMModule_L81F42L86T18_Object[64:33] = State_pwm[3];
	assign pwms3_iOnClock = AXI4PWMModule_L79F13L87T14_3_AXI4PWMModule_L81F42L86T18_Object[64:33];
	assign pwms3_iDurationClocks = AXI4PWMModule_L79F13L87T14_3_AXI4PWMModule_L81F42L86T18_Object[32:1];
	assign pwms3_iActive = AXI4PWMModule_L79F13L87T14_3_AXI4PWMModule_L81F42L86T18_Object[0];
	assign AXI4PWMModule_L79F13L87T14_4_AXI4PWMModule_L81F42L86T18_Object[0] = AXI4PWMModule_L83F31T35_Expr;
	assign AXI4PWMModule_L79F13L87T14_4_AXI4PWMModule_L81F42L86T18_Object[32:1] = {
		{12{1'b0}},
		AXI4PWMModule_L85F39T46_Expr
	}
	;
	assign AXI4PWMModule_L79F13L87T14_4_AXI4PWMModule_L81F42L86T18_Object[64:33] = State_pwm[4];
	assign pwms4_iOnClock = AXI4PWMModule_L79F13L87T14_4_AXI4PWMModule_L81F42L86T18_Object[64:33];
	assign pwms4_iDurationClocks = AXI4PWMModule_L79F13L87T14_4_AXI4PWMModule_L81F42L86T18_Object[32:1];
	assign pwms4_iActive = AXI4PWMModule_L79F13L87T14_4_AXI4PWMModule_L81F42L86T18_Object[0];
	assign AXI4PWMModule_L79F13L87T14_5_AXI4PWMModule_L81F42L86T18_Object[0] = AXI4PWMModule_L83F31T35_Expr;
	assign AXI4PWMModule_L79F13L87T14_5_AXI4PWMModule_L81F42L86T18_Object[32:1] = {
		{12{1'b0}},
		AXI4PWMModule_L85F39T46_Expr
	}
	;
	assign AXI4PWMModule_L79F13L87T14_5_AXI4PWMModule_L81F42L86T18_Object[64:33] = State_pwm[5];
	assign pwms5_iOnClock = AXI4PWMModule_L79F13L87T14_5_AXI4PWMModule_L81F42L86T18_Object[64:33];
	assign pwms5_iDurationClocks = AXI4PWMModule_L79F13L87T14_5_AXI4PWMModule_L81F42L86T18_Object[32:1];
	assign pwms5_iActive = AXI4PWMModule_L79F13L87T14_5_AXI4PWMModule_L81F42L86T18_Object[0];
	assign AXI4PWMModule_L79F13L87T14_6_AXI4PWMModule_L81F42L86T18_Object[0] = AXI4PWMModule_L83F31T35_Expr;
	assign AXI4PWMModule_L79F13L87T14_6_AXI4PWMModule_L81F42L86T18_Object[32:1] = {
		{12{1'b0}},
		AXI4PWMModule_L85F39T46_Expr
	}
	;
	assign AXI4PWMModule_L79F13L87T14_6_AXI4PWMModule_L81F42L86T18_Object[64:33] = State_pwm[6];
	assign pwms6_iOnClock = AXI4PWMModule_L79F13L87T14_6_AXI4PWMModule_L81F42L86T18_Object[64:33];
	assign pwms6_iDurationClocks = AXI4PWMModule_L79F13L87T14_6_AXI4PWMModule_L81F42L86T18_Object[32:1];
	assign pwms6_iActive = AXI4PWMModule_L79F13L87T14_6_AXI4PWMModule_L81F42L86T18_Object[0];
	assign AXI4PWMModule_L79F13L87T14_7_AXI4PWMModule_L81F42L86T18_Object[0] = AXI4PWMModule_L83F31T35_Expr;
	assign AXI4PWMModule_L79F13L87T14_7_AXI4PWMModule_L81F42L86T18_Object[32:1] = {
		{12{1'b0}},
		AXI4PWMModule_L85F39T46_Expr
	}
	;
	assign AXI4PWMModule_L79F13L87T14_7_AXI4PWMModule_L81F42L86T18_Object[64:33] = State_pwm[7];
	assign pwms7_iOnClock = AXI4PWMModule_L79F13L87T14_7_AXI4PWMModule_L81F42L86T18_Object[64:33];
	assign pwms7_iDurationClocks = AXI4PWMModule_L79F13L87T14_7_AXI4PWMModule_L81F42L86T18_Object[32:1];
	assign pwms7_iActive = AXI4PWMModule_L79F13L87T14_7_AXI4PWMModule_L81F42L86T18_Object[0];
	assign AXI4PWMModule_L94F9L108T10_AXI4PWMModule_L99F35T69_Source = {
		axiSlave_outWDATA[3],
		axiSlave_outWDATA[2],
		axiSlave_outWDATA[1],
		axiSlave_outWDATA[0]
	}
	;
	assign AXI4PWMModule_L62F31T65_Enumerable[0] = pwms0_oPWM;
	assign AXI4PWMModule_L62F31T65_Enumerable[1] = pwms1_oPWM;
	assign AXI4PWMModule_L62F31T65_Enumerable[2] = pwms2_oPWM;
	assign AXI4PWMModule_L62F31T65_Enumerable[3] = pwms3_oPWM;
	assign AXI4PWMModule_L62F31T65_Enumerable[4] = pwms4_oPWM;
	assign AXI4PWMModule_L62F31T65_Enumerable[5] = pwms5_oPWM;
	assign AXI4PWMModule_L62F31T65_Enumerable[6] = pwms6_oPWM;
	assign AXI4PWMModule_L62F31T65_Enumerable[7] = pwms7_oPWM;
	assign oPWM0 = AXI4PWMModule_L62F31T65_Enumerable[0];
	assign oPWM1 = AXI4PWMModule_L62F31T65_Enumerable[1];
	assign oPWM2 = AXI4PWMModule_L62F31T65_Enumerable[2];
	assign oPWM3 = AXI4PWMModule_L62F31T65_Enumerable[3];
	assign oPWM4 = AXI4PWMModule_L62F31T65_Enumerable[4];
	assign oPWM5 = AXI4PWMModule_L62F31T65_Enumerable[5];
	assign oPWM6 = AXI4PWMModule_L62F31T65_Enumerable[6];
	assign oPWM7 = AXI4PWMModule_L62F31T65_Enumerable[7];
	assign oS2M = axiSlave_S2M;
	assign axiSlave_inARREADY_axiSlave_inARREADY_HardLink = axiSlave_inARREADY;
	assign axiSlave_inAWREADY_axiSlave_inAWREADY_HardLink = axiSlave_inAWREADY;
	assign axiSlave_inBVALID_axiSlave_inBVALID_HardLink = axiSlave_inBVALID;
	assign axiSlave_inRDATA0_axiSlave_inRDATA_HardLink = axiSlave_inRDATA[0];
	assign axiSlave_inRDATA1_axiSlave_inRDATA_HardLink = axiSlave_inRDATA[1];
	assign axiSlave_inRDATA2_axiSlave_inRDATA_HardLink = axiSlave_inRDATA[2];
	assign axiSlave_inRDATA3_axiSlave_inRDATA_HardLink = axiSlave_inRDATA[3];
	assign axiSlave_inRVALID_axiSlave_inRVALID_HardLink = axiSlave_inRVALID;
	assign axiSlave_inWREADY_axiSlave_inWREADY_HardLink = axiSlave_inWREADY;
	assign axiSlave_M2S_axiSlave_M2S_HardLink = axiSlave_M2S;
	assign axiSlave_outARADDR = axiSlave_outARADDR_axiSlave_outARADDR_HardLink;
	assign axiSlave_outARREADYConfirming = axiSlave_outARREADYConfirming_axiSlave_outARREADYConfirming_HardLink;
	assign axiSlave_outARVALID = axiSlave_outARVALID_axiSlave_outARVALID_HardLink;
	assign axiSlave_outAWADDR = axiSlave_outAWADDR_axiSlave_outAWADDR_HardLink;
	assign axiSlave_outAWREADYConfirming = axiSlave_outAWREADYConfirming_axiSlave_outAWREADYConfirming_HardLink;
	assign axiSlave_outAWVALID = axiSlave_outAWVALID_axiSlave_outAWVALID_HardLink;
	assign axiSlave_outReadTXCompleting = axiSlave_outReadTXCompleting_axiSlave_outReadTXCompleting_HardLink;
	assign axiSlave_outWDATA[0] = axiSlave_outWDATA0_axiSlave_outWDATA_HardLink;
	assign axiSlave_outWDATA[1] = axiSlave_outWDATA1_axiSlave_outWDATA_HardLink;
	assign axiSlave_outWDATA[2] = axiSlave_outWDATA2_axiSlave_outWDATA_HardLink;
	assign axiSlave_outWDATA[3] = axiSlave_outWDATA3_axiSlave_outWDATA_HardLink;
	assign axiSlave_outWREADYConfirming = axiSlave_outWREADYConfirming_axiSlave_outWREADYConfirming_HardLink;
	assign axiSlave_outWriteTXCompleting = axiSlave_outWriteTXCompleting_axiSlave_outWriteTXCompleting_HardLink;
	assign axiSlave_outWSTRB = axiSlave_outWSTRB_axiSlave_outWSTRB_HardLink;
	assign axiSlave_outWVALID = axiSlave_outWVALID_axiSlave_outWVALID_HardLink;
	assign axiSlave_S2M = axiSlave_S2M_axiSlave_S2M_HardLink;
	assign pwms0_iActive_pwms0_iActive_HardLink = pwms0_iActive;
	assign pwms0_iDurationClocks_pwms0_iDurationClocks_HardLink = pwms0_iDurationClocks;
	assign pwms0_iOnClock_pwms0_iOnClock_HardLink = pwms0_iOnClock;
	assign pwms0_oCycle = pwms0_oCycle_pwms0_oCycle_HardLink;
	assign pwms0_oPWM = pwms0_oPWM_pwms0_oPWM_HardLink;
	assign pwms1_iActive_pwms1_iActive_HardLink = pwms1_iActive;
	assign pwms1_iDurationClocks_pwms1_iDurationClocks_HardLink = pwms1_iDurationClocks;
	assign pwms1_iOnClock_pwms1_iOnClock_HardLink = pwms1_iOnClock;
	assign pwms1_oCycle = pwms1_oCycle_pwms1_oCycle_HardLink;
	assign pwms1_oPWM = pwms1_oPWM_pwms1_oPWM_HardLink;
	assign pwms2_iActive_pwms2_iActive_HardLink = pwms2_iActive;
	assign pwms2_iDurationClocks_pwms2_iDurationClocks_HardLink = pwms2_iDurationClocks;
	assign pwms2_iOnClock_pwms2_iOnClock_HardLink = pwms2_iOnClock;
	assign pwms2_oCycle = pwms2_oCycle_pwms2_oCycle_HardLink;
	assign pwms2_oPWM = pwms2_oPWM_pwms2_oPWM_HardLink;
	assign pwms3_iActive_pwms3_iActive_HardLink = pwms3_iActive;
	assign pwms3_iDurationClocks_pwms3_iDurationClocks_HardLink = pwms3_iDurationClocks;
	assign pwms3_iOnClock_pwms3_iOnClock_HardLink = pwms3_iOnClock;
	assign pwms3_oCycle = pwms3_oCycle_pwms3_oCycle_HardLink;
	assign pwms3_oPWM = pwms3_oPWM_pwms3_oPWM_HardLink;
	assign pwms4_iActive_pwms4_iActive_HardLink = pwms4_iActive;
	assign pwms4_iDurationClocks_pwms4_iDurationClocks_HardLink = pwms4_iDurationClocks;
	assign pwms4_iOnClock_pwms4_iOnClock_HardLink = pwms4_iOnClock;
	assign pwms4_oCycle = pwms4_oCycle_pwms4_oCycle_HardLink;
	assign pwms4_oPWM = pwms4_oPWM_pwms4_oPWM_HardLink;
	assign pwms5_iActive_pwms5_iActive_HardLink = pwms5_iActive;
	assign pwms5_iDurationClocks_pwms5_iDurationClocks_HardLink = pwms5_iDurationClocks;
	assign pwms5_iOnClock_pwms5_iOnClock_HardLink = pwms5_iOnClock;
	assign pwms5_oCycle = pwms5_oCycle_pwms5_oCycle_HardLink;
	assign pwms5_oPWM = pwms5_oPWM_pwms5_oPWM_HardLink;
	assign pwms6_iActive_pwms6_iActive_HardLink = pwms6_iActive;
	assign pwms6_iDurationClocks_pwms6_iDurationClocks_HardLink = pwms6_iDurationClocks;
	assign pwms6_iOnClock_pwms6_iOnClock_HardLink = pwms6_iOnClock;
	assign pwms6_oCycle = pwms6_oCycle_pwms6_oCycle_HardLink;
	assign pwms6_oPWM = pwms6_oPWM_pwms6_oPWM_HardLink;
	assign pwms7_iActive_pwms7_iActive_HardLink = pwms7_iActive;
	assign pwms7_iDurationClocks_pwms7_iDurationClocks_HardLink = pwms7_iDurationClocks;
	assign pwms7_iOnClock_pwms7_iOnClock_HardLink = pwms7_iOnClock;
	assign pwms7_oCycle = pwms7_oCycle_pwms7_oCycle_HardLink;
	assign pwms7_oPWM = pwms7_oPWM_pwms7_oPWM_HardLink;
	// [BEGIN USER ARCHITECTURE]
	// [END USER ARCHITECTURE]
endmodule
