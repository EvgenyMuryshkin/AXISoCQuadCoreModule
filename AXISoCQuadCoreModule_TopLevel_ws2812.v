`timescale 1ns/1ps
`default_nettype none
// PLEASE READ THIS, IT MAY SAVE YOU SOME TIME AND MONEY, THANK YOU!
// * This file was generated by Quokka FPGA Toolkit.
// * Generated code is your property, do whatever you want with it
// * Place custom code between [BEGIN USER ***] and [END USER ***].
// * CAUTION: All code outside of [USER] scope is subject to regeneration.
// * Bad things happen sometimes in developer's life,
//   it is recommended to use source control management software (e.g. git, bzr etc) to keep your custom code safe'n'sound.
// * Internal structure of code is subject to change.
//   You can use some of signals in custom code, but most likely they will not exist in future (e.g. will get shorter or gone completely)
// * Please send your feedback, comments, improvement ideas etc. to evmuryshkin@gmail.com
// * Visit https://github.com/EvgenyMuryshkin/QuokkaEvaluation to access latest version of playground
//
// DISCLAIMER:
//   Code comes AS-IS, it is your responsibility to make sure it is working as expected
//   no responsibility will be taken for any loss or damage caused by use of Quokka toolkit.
//
// System configuration name is AXISoCQuadCoreModule_TopLevel_ws2812, clock frequency is 1Hz, Embedded
// FSM summary
// -- Packages
module AXISoCQuadCoreModule_TopLevel_ws2812
(
	// [BEGIN USER PORTS]
	// [END USER PORTS]
	input wire BoardSignals_Clock,
	input wire BoardSignals_Reset,
	input wire BoardSignals_Running,
	input wire BoardSignals_Starting,
	input wire BoardSignals_Started,
	input wire [221:0] M2S,
	output wire [73:0] oS2M,
	output wire oTX,
	output wire oTXBit
);
	// [BEGIN USER SIGNALS]
	// [END USER SIGNALS]
	localparam HiSignal = 1'b1;
	localparam LoSignal = 1'b0;
	wire Zero = 1'b0;
	wire One = 1'b1;
	wire true = 1'b1;
	wire false = 1'b0;
	wire [5: 0] oneHigh = 6'b101100;
	wire [4: 0] oneLow = 5'b10011;
	wire [3: 0] zeroHigh = 4'b1110;
	wire [5: 0] zeroLow = 6'b110001;
	wire AXI4WS2812Module_L93F13T26_Expr = 1'b0;
	wire AXI4WS2812Module_L94F13T26_Expr = 1'b0;
	wire AXI4WS2812Module_L95F13T26_Expr = 1'b0;
	wire [2: 0] AXI4WS2812Module_L96F28T44_Expr = 3'b001;
	wire AXI4WS2812Module_L79F29T33_Expr = 1'b1;
	wire AXI4WS2812Module_L81F29T33_Expr = 1'b1;
	wire AXI4WS2812Module_L83F28T32_Expr = 1'b1;
	wire AXI4WS2812Module_L80F28T32_Expr = 1'b1;
	wire AXI4WS2812Module_L82F28T32_Expr = 1'b1;
	wire AXI4WS2812Module_L126F59T60_Expr = 1'b1;
	wire [2: 0] AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L129F22T39_Expr = 3'b000;
	wire [2: 0] AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L130F39T55_Expr = 3'b001;
	wire [2: 0] AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L132F22T38_Expr = 3'b001;
	wire [2: 0] AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L134F21L141T22_AXI4WS2812Module_L139F43T65_Expr = 3'b010;
	wire [4: 0] AXI4WS2812Module_L140F47T49_Expr = 5'b11000;
	wire [2: 0] AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L143F22T44_Expr = 3'b010;
	wire AXI4WS2812Module_L101F36T37_Expr = 1'b0;
	wire [2: 0] AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L144F21T31_AXI4WS2812Module_L100F9L122T10_AXI4WS2812Module_L102F13L105T14_AXI4WS2812Module_L103F35T51_Expr = 3'b001;
	wire AXI4WS2812Module_L104F35T40_Expr = 1'b0;
	wire AXI4WS2812Module_L108F64T65_Expr = 1'b1;
	wire [2: 0] AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L144F21T31_AXI4WS2812Module_L100F9L122T10_AXI4WS2812Module_L107F13L121T14_AXI4WS2812Module_L109F35T51_Expr = 3'b011;
	wire AXI4WS2812Module_L110F32T36_Expr = 1'b1;
	wire [2: 0] AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L146F22T38_Expr = 3'b011;
	wire AXI4WS2812Module_L147F47T48_Expr = 1'b1;
	wire [2: 0] AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L148F21L161T22_AXI4WS2812Module_L149F43T58_Expr = 3'b100;
	wire AXI4WS2812Module_L150F56T57_Expr = 1'b1;
	wire AXI4WS2812Module_L151F40T45_Expr = 1'b0;
	wire [2: 0] AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L163F22T37_Expr = 3'b100;
	wire AXI4WS2812Module_L164F47T48_Expr = 1'b1;
	wire [2: 0] AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L165F21L167T22_AXI4WS2812Module_L166F25T35_AXI4WS2812Module_L100F9L122T10_AXI4WS2812Module_L102F13L105T14_AXI4WS2812Module_L103F35T51_Expr = 3'b001;
	wire [2: 0] AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L165F21L167T22_AXI4WS2812Module_L166F25T35_AXI4WS2812Module_L100F9L122T10_AXI4WS2812Module_L107F13L121T14_AXI4WS2812Module_L109F35T51_Expr = 3'b011;
	wire [7: 0] Inputs_M2S_R_AR_ARID;
	wire [31: 0] Inputs_M2S_R_AR_ARADDR;
	wire [7: 0] Inputs_M2S_R_AR_ARLEN;
	wire [2: 0] Inputs_M2S_R_AR_ARSIZE;
	wire [1: 0] Inputs_M2S_R_AR_ARBURST;
	wire [1: 0] Inputs_M2S_R_AR_ARLOCK;
	wire [3: 0] Inputs_M2S_R_AR_ARCACHE;
	wire [2: 0] Inputs_M2S_R_AR_ARPROT;
	wire [3: 0] Inputs_M2S_R_AR_ARQOS;
	wire [7: 0] Inputs_M2S_R_AR_ARREGION;
	wire [7: 0] Inputs_M2S_R_AR_ARUSER;
	wire Inputs_M2S_R_AR_ARVALID;
	wire Inputs_M2S_R_R_RREADY;
	wire [7: 0] Inputs_M2S_W_AW_AWID;
	wire [31: 0] Inputs_M2S_W_AW_AWADDR;
	wire [7: 0] Inputs_M2S_W_AW_AWLEN;
	wire [2: 0] Inputs_M2S_W_AW_AWSIZE;
	wire [1: 0] Inputs_M2S_W_AW_AWBURST;
	wire [1: 0] Inputs_M2S_W_AW_AWLOCK;
	wire [3: 0] Inputs_M2S_W_AW_AWCACHE;
	wire [2: 0] Inputs_M2S_W_AW_AWPROT;
	wire [3: 0] Inputs_M2S_W_AW_AWQOS;
	wire [7: 0] Inputs_M2S_W_AW_AWREGION;
	wire [7: 0] Inputs_M2S_W_AW_AWUSER;
	wire Inputs_M2S_W_AW_AWVALID;
	wire [7: 0] Inputs_M2S_W_W_WID;
	wire [3: 0] Inputs_M2S_W_W_WSTRB;
	wire Inputs_M2S_W_W_WLAST;
	wire [7: 0] Inputs_M2S_W_W_WUSER;
	wire Inputs_M2S_W_W_WVALID;
	wire Inputs_M2S_W_B_BREADY;
	reg [31: 0] NextState_clockCounter;
	reg [23: 0] NextState_data;
	reg [2: 0] NextState_state;
	reg NextState_tx;
	reg NextState_txBit;
	reg [7: 0] NextState_txCounter;
	wire [31: 0] rData;
	wire axiSlave_inARREADY;
	wire axiSlave_inAWREADY;
	wire axiSlave_inBVALID;
	wire axiSlave_inRVALID;
	wire axiSlave_inWREADY;
	wire [221: 0] axiSlave_M2S;
	wire [31: 0] axiSlave_outARADDR;
	wire axiSlave_outARREADYConfirming;
	wire axiSlave_outARVALID;
	wire [31: 0] axiSlave_outAWADDR;
	wire axiSlave_outAWREADYConfirming;
	wire axiSlave_outAWVALID;
	wire axiSlave_outReadTXCompleting;
	wire axiSlave_outWREADYConfirming;
	wire axiSlave_outWriteTXCompleting;
	wire [3: 0] axiSlave_outWSTRB;
	wire axiSlave_outWVALID;
	wire [73: 0] axiSlave_S2M;
	reg [7: 0] AXI4WS2812Module_L96F47T54_Cast = 8'b00000001;
	reg [7: 0] AXI4WS2812Module_L96F57T64_Cast = 8'b00000000;
	wire [7: 0] AXI4WS2812Module_L96F13T64_WhenTrue;
	wire [7: 0] AXI4WS2812Module_L96F13T64_WhenFalse;
	wire [7: 0] AXI4WS2812Module_L96F13T64_Ternary;
	wire [10: 0] AXI4WS2812Module_L91F30L97T10_Source;
	wire [258: 0] AXI4WS2812Module_L76F37L85T14_Object;
	wire [23: 0] AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L134F21L141T22_AXI4WS2812Module_L138F42T148_Source;
	wire [7: 0] AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L144F21T31_AXI4WS2812Module_L100F9L122T10_AXI4WS2812Module_L107F13L121T14_AXI4WS2812Module_L108F39T66_Cast;
	wire [7: 0] AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L165F21L167T22_AXI4WS2812Module_L166F25T35_AXI4WS2812Module_L100F9L122T10_AXI4WS2812Module_L107F13L121T14_AXI4WS2812Module_L108F39T66_Cast;
	wire axiSlave_inARREADY_axiSlave_inARREADY_HardLink;
	wire axiSlave_inAWREADY_axiSlave_inAWREADY_HardLink;
	wire axiSlave_inBVALID_axiSlave_inBVALID_HardLink;
	wire [7: 0] axiSlave_inRDATA0_axiSlave_inRDATA_HardLink;
	wire [7: 0] axiSlave_inRDATA1_axiSlave_inRDATA_HardLink;
	wire [7: 0] axiSlave_inRDATA2_axiSlave_inRDATA_HardLink;
	wire [7: 0] axiSlave_inRDATA3_axiSlave_inRDATA_HardLink;
	wire axiSlave_inRVALID_axiSlave_inRVALID_HardLink;
	wire axiSlave_inWREADY_axiSlave_inWREADY_HardLink;
	wire [221: 0] axiSlave_M2S_axiSlave_M2S_HardLink;
	wire [31: 0] axiSlave_outARADDR_axiSlave_outARADDR_HardLink;
	wire axiSlave_outARREADYConfirming_axiSlave_outARREADYConfirming_HardLink;
	wire axiSlave_outARVALID_axiSlave_outARVALID_HardLink;
	wire [31: 0] axiSlave_outAWADDR_axiSlave_outAWADDR_HardLink;
	wire axiSlave_outAWREADYConfirming_axiSlave_outAWREADYConfirming_HardLink;
	wire axiSlave_outAWVALID_axiSlave_outAWVALID_HardLink;
	wire axiSlave_outReadTXCompleting_axiSlave_outReadTXCompleting_HardLink;
	wire [7: 0] axiSlave_outWDATA0_axiSlave_outWDATA_HardLink;
	wire [7: 0] axiSlave_outWDATA1_axiSlave_outWDATA_HardLink;
	wire [7: 0] axiSlave_outWDATA2_axiSlave_outWDATA_HardLink;
	wire [7: 0] axiSlave_outWDATA3_axiSlave_outWDATA_HardLink;
	wire axiSlave_outWREADYConfirming_axiSlave_outWREADYConfirming_HardLink;
	wire axiSlave_outWriteTXCompleting_axiSlave_outWriteTXCompleting_HardLink;
	wire [3: 0] axiSlave_outWSTRB_axiSlave_outWSTRB_HardLink;
	wire axiSlave_outWVALID_axiSlave_outWVALID_HardLink;
	wire [73: 0] axiSlave_S2M_axiSlave_S2M_HardLink;
	reg [31: 0] State_clockCounter = 32'b00000000000000000000000000000000;
	wire [31: 0] State_clockCounterDefault = 32'b00000000000000000000000000000000;
	reg [23: 0] State_data = 24'b000000000000000000000000;
	wire [23: 0] State_dataDefault = 24'b000000000000000000000000;
	reg [2: 0] State_state = 3'b000;
	wire [2: 0] State_stateDefault = 3'b000;
	reg State_tx = 1'b0;
	wire State_txDefault = 1'b0;
	reg State_txBit = 1'b0;
	wire State_txBitDefault = 1'b0;
	reg [7: 0] State_txCounter = 8'b00000000;
	wire [7: 0] State_txCounterDefault = 8'b00000000;
	wire [23: 0] AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L134F21L141T22_AXI4WS2812Module_L138F42T159_Expr;
	wire [23: 0] AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L134F21L141T22_AXI4WS2812Module_L138F42T159_Expr_1;
	wire [23: 0] AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L148F21L161T22_AXI4WS2812Module_L150F42T57_Expr;
	wire [23: 0] AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L148F21L161T22_AXI4WS2812Module_L150F42T57_Expr_1;
	wire signed [33: 0] AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L126F38T60_Expr;
	wire signed [33: 0] AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L126F38T60_Expr_1;
	wire signed [33: 0] AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L126F38T60_Expr_2;
	wire signed [9: 0] AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L144F21T31_AXI4WS2812Module_L100F9L122T10_AXI4WS2812Module_L107F13L121T14_AXI4WS2812Module_L108F46T65_Expr;
	wire signed [9: 0] AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L144F21T31_AXI4WS2812Module_L100F9L122T10_AXI4WS2812Module_L107F13L121T14_AXI4WS2812Module_L108F46T65_Expr_1;
	wire signed [9: 0] AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L144F21T31_AXI4WS2812Module_L100F9L122T10_AXI4WS2812Module_L107F13L121T14_AXI4WS2812Module_L108F46T65_Expr_2;
	wire signed [9: 0] AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L165F21L167T22_AXI4WS2812Module_L166F25T35_AXI4WS2812Module_L100F9L122T10_AXI4WS2812Module_L107F13L121T14_AXI4WS2812Module_L108F46T65_Expr;
	wire signed [9: 0] AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L165F21L167T22_AXI4WS2812Module_L166F25T35_AXI4WS2812Module_L100F9L122T10_AXI4WS2812Module_L107F13L121T14_AXI4WS2812Module_L108F46T65_Expr_1;
	wire signed [9: 0] AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L165F21L167T22_AXI4WS2812Module_L166F25T35_AXI4WS2812Module_L100F9L122T10_AXI4WS2812Module_L107F13L121T14_AXI4WS2812Module_L108F46T65_Expr_2;
	wire AXI4WS2812Module_L96F13T44_Expr;
	wire signed [3: 0] AXI4WS2812Module_L96F13T44_ExprLhs;
	wire signed [3: 0] AXI4WS2812Module_L96F13T44_ExprRhs;
	wire AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L129F17L131T27_Case;
	wire signed [3: 0] AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L129F17L131T27_CaseLhs;
	wire signed [3: 0] AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L129F17L131T27_CaseRhs;
	wire AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L132F17L142T27_Case;
	wire signed [3: 0] AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L132F17L142T27_CaseLhs;
	wire signed [3: 0] AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L132F17L142T27_CaseRhs;
	wire AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L143F17L145T27_Case;
	wire signed [3: 0] AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L143F17L145T27_CaseLhs;
	wire signed [3: 0] AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L143F17L145T27_CaseRhs;
	wire AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L144F21T31_AXI4WS2812Module_L100F9L122T10_AXI4WS2812Module_L101F17T37_Expr;
	wire signed [8: 0] AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L144F21T31_AXI4WS2812Module_L100F9L122T10_AXI4WS2812Module_L101F17T37_ExprLhs;
	wire signed [8: 0] AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L144F21T31_AXI4WS2812Module_L100F9L122T10_AXI4WS2812Module_L101F17T37_ExprRhs;
	wire AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L146F17L162T27_Case;
	wire signed [3: 0] AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L146F17L162T27_CaseLhs;
	wire signed [3: 0] AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L146F17L162T27_CaseRhs;
	wire AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L147F25T48_Expr;
	wire signed [32: 0] AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L147F25T48_ExprLhs;
	wire signed [32: 0] AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L147F25T48_ExprRhs;
	wire AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L163F17L168T27_Case;
	wire signed [3: 0] AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L163F17L168T27_CaseLhs;
	wire signed [3: 0] AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L163F17L168T27_CaseRhs;
	wire AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L164F25T48_Expr;
	wire signed [32: 0] AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L164F25T48_ExprLhs;
	wire signed [32: 0] AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L164F25T48_ExprRhs;
	wire AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L165F21L167T22_AXI4WS2812Module_L166F25T35_AXI4WS2812Module_L100F9L122T10_AXI4WS2812Module_L101F17T37_Expr;
	wire signed [8: 0] AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L165F21L167T22_AXI4WS2812Module_L166F25T35_AXI4WS2812Module_L100F9L122T10_AXI4WS2812Module_L101F17T37_ExprLhs;
	wire signed [8: 0] AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L165F21L167T22_AXI4WS2812Module_L166F25T35_AXI4WS2812Module_L100F9L122T10_AXI4WS2812Module_L101F17T37_ExprRhs;
	wire [7 : 0] Inputs_M2S_W_W_WDATA [0 : 3];
	wire [7 : 0] axiSlave_inRDATA [0 : 3];
	wire [7 : 0] axiSlave_outWDATA [0 : 3];
	always @ (posedge BoardSignals_Clock)
	begin
		if ((BoardSignals_Reset == 1))
		begin
			State_clockCounter <= State_clockCounterDefault;
			State_data <= State_dataDefault;
			State_state <= State_stateDefault;
			State_tx <= State_txDefault;
			State_txBit <= State_txBitDefault;
			State_txCounter <= State_txCounterDefault;
		end
		else
		begin
			State_clockCounter <= NextState_clockCounter;
			State_data <= NextState_data;
			State_state <= NextState_state;
			State_tx <= NextState_tx;
			State_txBit <= NextState_txBit;
			State_txCounter <= NextState_txCounter;
		end
	end
	assign AXI4WS2812Module_L96F13T44_Expr = AXI4WS2812Module_L96F13T44_ExprLhs == AXI4WS2812Module_L96F13T44_ExprRhs ? 1'b1 : 1'b0;
	assign AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L129F17L131T27_Case = AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L129F17L131T27_CaseLhs == AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L129F17L131T27_CaseRhs ? 1'b1 : 1'b0;
	assign AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L132F17L142T27_Case = AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L132F17L142T27_CaseLhs == AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L132F17L142T27_CaseRhs ? 1'b1 : 1'b0;
	assign AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L143F17L145T27_Case = AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L143F17L145T27_CaseLhs == AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L143F17L145T27_CaseRhs ? 1'b1 : 1'b0;
	assign AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L144F21T31_AXI4WS2812Module_L100F9L122T10_AXI4WS2812Module_L101F17T37_Expr = AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L144F21T31_AXI4WS2812Module_L100F9L122T10_AXI4WS2812Module_L101F17T37_ExprLhs == AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L144F21T31_AXI4WS2812Module_L100F9L122T10_AXI4WS2812Module_L101F17T37_ExprRhs ? 1'b1 : 1'b0;
	assign AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L146F17L162T27_Case = AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L146F17L162T27_CaseLhs == AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L146F17L162T27_CaseRhs ? 1'b1 : 1'b0;
	assign AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L147F25T48_Expr = AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L147F25T48_ExprLhs == AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L147F25T48_ExprRhs ? 1'b1 : 1'b0;
	assign AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L163F17L168T27_Case = AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L163F17L168T27_CaseLhs == AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L163F17L168T27_CaseRhs ? 1'b1 : 1'b0;
	assign AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L164F25T48_Expr = AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L164F25T48_ExprLhs == AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L164F25T48_ExprRhs ? 1'b1 : 1'b0;
	assign AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L165F21L167T22_AXI4WS2812Module_L166F25T35_AXI4WS2812Module_L100F9L122T10_AXI4WS2812Module_L101F17T37_Expr = AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L165F21L167T22_AXI4WS2812Module_L166F25T35_AXI4WS2812Module_L100F9L122T10_AXI4WS2812Module_L101F17T37_ExprLhs == AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L165F21L167T22_AXI4WS2812Module_L166F25T35_AXI4WS2812Module_L100F9L122T10_AXI4WS2812Module_L101F17T37_ExprRhs ? 1'b1 : 1'b0;
	genvar LogicalFunctionLogicalFunction4_idx;
	generate
		for (LogicalFunctionLogicalFunction4_idx = 23; (LogicalFunctionLogicalFunction4_idx >= 0); LogicalFunctionLogicalFunction4_idx = (LogicalFunctionLogicalFunction4_idx - 1))
		begin : LogicalFunctionLogicalFunction4_idxReverse
			assign AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L134F21L141T22_AXI4WS2812Module_L138F42T159_Expr[LogicalFunctionLogicalFunction4_idx] = AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L134F21L141T22_AXI4WS2812Module_L138F42T159_Expr_1[23 - LogicalFunctionLogicalFunction4_idx];
		end
	endgenerate
	// Output: AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L148F21L161T22_AXI4WS2812Module_L150F42T57_Expr, Width: 24, ShiftBy: 1, Sources: 1
	assign AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L148F21L161T22_AXI4WS2812Module_L150F42T57_Expr[0] = AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L148F21L161T22_AXI4WS2812Module_L150F42T57_Expr_1[1];
	assign AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L148F21L161T22_AXI4WS2812Module_L150F42T57_Expr[1] = AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L148F21L161T22_AXI4WS2812Module_L150F42T57_Expr_1[2];
	assign AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L148F21L161T22_AXI4WS2812Module_L150F42T57_Expr[2] = AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L148F21L161T22_AXI4WS2812Module_L150F42T57_Expr_1[3];
	assign AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L148F21L161T22_AXI4WS2812Module_L150F42T57_Expr[3] = AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L148F21L161T22_AXI4WS2812Module_L150F42T57_Expr_1[4];
	assign AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L148F21L161T22_AXI4WS2812Module_L150F42T57_Expr[4] = AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L148F21L161T22_AXI4WS2812Module_L150F42T57_Expr_1[5];
	assign AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L148F21L161T22_AXI4WS2812Module_L150F42T57_Expr[5] = AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L148F21L161T22_AXI4WS2812Module_L150F42T57_Expr_1[6];
	assign AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L148F21L161T22_AXI4WS2812Module_L150F42T57_Expr[6] = AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L148F21L161T22_AXI4WS2812Module_L150F42T57_Expr_1[7];
	assign AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L148F21L161T22_AXI4WS2812Module_L150F42T57_Expr[7] = AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L148F21L161T22_AXI4WS2812Module_L150F42T57_Expr_1[8];
	assign AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L148F21L161T22_AXI4WS2812Module_L150F42T57_Expr[8] = AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L148F21L161T22_AXI4WS2812Module_L150F42T57_Expr_1[9];
	assign AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L148F21L161T22_AXI4WS2812Module_L150F42T57_Expr[9] = AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L148F21L161T22_AXI4WS2812Module_L150F42T57_Expr_1[10];
	assign AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L148F21L161T22_AXI4WS2812Module_L150F42T57_Expr[10] = AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L148F21L161T22_AXI4WS2812Module_L150F42T57_Expr_1[11];
	assign AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L148F21L161T22_AXI4WS2812Module_L150F42T57_Expr[11] = AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L148F21L161T22_AXI4WS2812Module_L150F42T57_Expr_1[12];
	assign AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L148F21L161T22_AXI4WS2812Module_L150F42T57_Expr[12] = AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L148F21L161T22_AXI4WS2812Module_L150F42T57_Expr_1[13];
	assign AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L148F21L161T22_AXI4WS2812Module_L150F42T57_Expr[13] = AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L148F21L161T22_AXI4WS2812Module_L150F42T57_Expr_1[14];
	assign AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L148F21L161T22_AXI4WS2812Module_L150F42T57_Expr[14] = AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L148F21L161T22_AXI4WS2812Module_L150F42T57_Expr_1[15];
	assign AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L148F21L161T22_AXI4WS2812Module_L150F42T57_Expr[15] = AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L148F21L161T22_AXI4WS2812Module_L150F42T57_Expr_1[16];
	assign AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L148F21L161T22_AXI4WS2812Module_L150F42T57_Expr[16] = AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L148F21L161T22_AXI4WS2812Module_L150F42T57_Expr_1[17];
	assign AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L148F21L161T22_AXI4WS2812Module_L150F42T57_Expr[17] = AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L148F21L161T22_AXI4WS2812Module_L150F42T57_Expr_1[18];
	assign AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L148F21L161T22_AXI4WS2812Module_L150F42T57_Expr[18] = AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L148F21L161T22_AXI4WS2812Module_L150F42T57_Expr_1[19];
	assign AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L148F21L161T22_AXI4WS2812Module_L150F42T57_Expr[19] = AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L148F21L161T22_AXI4WS2812Module_L150F42T57_Expr_1[20];
	assign AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L148F21L161T22_AXI4WS2812Module_L150F42T57_Expr[20] = AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L148F21L161T22_AXI4WS2812Module_L150F42T57_Expr_1[21];
	assign AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L148F21L161T22_AXI4WS2812Module_L150F42T57_Expr[21] = AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L148F21L161T22_AXI4WS2812Module_L150F42T57_Expr_1[22];
	assign AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L148F21L161T22_AXI4WS2812Module_L150F42T57_Expr[22] = AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L148F21L161T22_AXI4WS2812Module_L150F42T57_Expr_1[23];
	assign AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L148F21L161T22_AXI4WS2812Module_L150F42T57_Expr[23] = 0;
	assign AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L126F38T60_Expr = AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L126F38T60_Expr_1 - AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L126F38T60_Expr_2;
	assign AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L144F21T31_AXI4WS2812Module_L100F9L122T10_AXI4WS2812Module_L107F13L121T14_AXI4WS2812Module_L108F46T65_Expr = AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L144F21T31_AXI4WS2812Module_L100F9L122T10_AXI4WS2812Module_L107F13L121T14_AXI4WS2812Module_L108F46T65_Expr_1 - AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L144F21T31_AXI4WS2812Module_L100F9L122T10_AXI4WS2812Module_L107F13L121T14_AXI4WS2812Module_L108F46T65_Expr_2;
	assign AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L165F21L167T22_AXI4WS2812Module_L166F25T35_AXI4WS2812Module_L100F9L122T10_AXI4WS2812Module_L107F13L121T14_AXI4WS2812Module_L108F46T65_Expr = AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L165F21L167T22_AXI4WS2812Module_L166F25T35_AXI4WS2812Module_L100F9L122T10_AXI4WS2812Module_L107F13L121T14_AXI4WS2812Module_L108F46T65_Expr_1 - AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L165F21L167T22_AXI4WS2812Module_L166F25T35_AXI4WS2812Module_L100F9L122T10_AXI4WS2812Module_L107F13L121T14_AXI4WS2812Module_L108F46T65_Expr_2;
	AXISoCQuadCoreModule_TopLevel_ws2812_axiSlave
	AXISoCQuadCoreModule_TopLevel_ws2812_axiSlave
	(
		// [BEGIN USER MAP FOR axiSlave]
		// [END USER MAP FOR axiSlave]
		.BoardSignals_Clock (BoardSignals_Clock),
		.BoardSignals_Reset (BoardSignals_Reset),
		.BoardSignals_Running (BoardSignals_Running),
		.BoardSignals_Starting (BoardSignals_Starting),
		.BoardSignals_Started (BoardSignals_Started),
		.inARREADY (axiSlave_inARREADY_axiSlave_inARREADY_HardLink),
		.inAWREADY (axiSlave_inAWREADY_axiSlave_inAWREADY_HardLink),
		.inBVALID (axiSlave_inBVALID_axiSlave_inBVALID_HardLink),
		.inRDATA0 (axiSlave_inRDATA0_axiSlave_inRDATA_HardLink),
		.inRDATA1 (axiSlave_inRDATA1_axiSlave_inRDATA_HardLink),
		.inRDATA2 (axiSlave_inRDATA2_axiSlave_inRDATA_HardLink),
		.inRDATA3 (axiSlave_inRDATA3_axiSlave_inRDATA_HardLink),
		.inRVALID (axiSlave_inRVALID_axiSlave_inRVALID_HardLink),
		.inWREADY (axiSlave_inWREADY_axiSlave_inWREADY_HardLink),
		.M2S (axiSlave_M2S_axiSlave_M2S_HardLink),
		.outARADDR (axiSlave_outARADDR_axiSlave_outARADDR_HardLink),
		.outARREADYConfirming (axiSlave_outARREADYConfirming_axiSlave_outARREADYConfirming_HardLink),
		.outARVALID (axiSlave_outARVALID_axiSlave_outARVALID_HardLink),
		.outAWADDR (axiSlave_outAWADDR_axiSlave_outAWADDR_HardLink),
		.outAWREADYConfirming (axiSlave_outAWREADYConfirming_axiSlave_outAWREADYConfirming_HardLink),
		.outAWVALID (axiSlave_outAWVALID_axiSlave_outAWVALID_HardLink),
		.outReadTXCompleting (axiSlave_outReadTXCompleting_axiSlave_outReadTXCompleting_HardLink),
		.outWDATA0 (axiSlave_outWDATA0_axiSlave_outWDATA_HardLink),
		.outWDATA1 (axiSlave_outWDATA1_axiSlave_outWDATA_HardLink),
		.outWDATA2 (axiSlave_outWDATA2_axiSlave_outWDATA_HardLink),
		.outWDATA3 (axiSlave_outWDATA3_axiSlave_outWDATA_HardLink),
		.outWREADYConfirming (axiSlave_outWREADYConfirming_axiSlave_outWREADYConfirming_HardLink),
		.outWriteTXCompleting (axiSlave_outWriteTXCompleting_axiSlave_outWriteTXCompleting_HardLink),
		.outWSTRB (axiSlave_outWSTRB_axiSlave_outWSTRB_HardLink),
		.outWVALID (axiSlave_outWVALID_axiSlave_outWVALID_HardLink),
		.S2M (axiSlave_S2M_axiSlave_S2M_HardLink)
	);
	assign AXI4WS2812Module_L96F13T64_Ternary = (AXI4WS2812Module_L96F13T44_Expr ? AXI4WS2812Module_L96F13T64_WhenTrue : AXI4WS2812Module_L96F13T64_WhenFalse);
	always @ (*)
	begin
		NextState_clockCounter = State_clockCounter;
		NextState_data = State_data;
		NextState_state = State_state;
		NextState_tx = State_tx;
		NextState_txBit = State_txBit;
		NextState_txCounter = State_txCounter;
		NextState_clockCounter = AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L126F38T60_Expr[31:0];
		if ((AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L129F17L131T27_Case == 1))
		begin
			NextState_state = AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L130F39T55_Expr;
		end
		else if ((AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L132F17L142T27_Case == 1))
		begin
			if ((axiSlave_outWVALID == 1))
			begin
				NextState_data = AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L134F21L141T22_AXI4WS2812Module_L138F42T159_Expr;
				NextState_state = AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L134F21L141T22_AXI4WS2812Module_L139F43T65_Expr;
				NextState_txCounter = {
					{3{1'b0}},
					AXI4WS2812Module_L140F47T49_Expr
				}
				;
			end
		end
		else if ((AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L143F17L145T27_Case == 1))
		begin
			if ((AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L144F21T31_AXI4WS2812Module_L100F9L122T10_AXI4WS2812Module_L101F17T37_Expr == 1))
			begin
				NextState_state = AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L144F21T31_AXI4WS2812Module_L100F9L122T10_AXI4WS2812Module_L102F13L105T14_AXI4WS2812Module_L103F35T51_Expr;
				NextState_txBit = AXI4WS2812Module_L104F35T40_Expr;
			end
			else
			begin
				NextState_txCounter = AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L144F21T31_AXI4WS2812Module_L100F9L122T10_AXI4WS2812Module_L107F13L121T14_AXI4WS2812Module_L108F39T66_Cast;
				NextState_state = AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L144F21T31_AXI4WS2812Module_L100F9L122T10_AXI4WS2812Module_L107F13L121T14_AXI4WS2812Module_L109F35T51_Expr;
				NextState_tx = AXI4WS2812Module_L110F32T36_Expr;
				NextState_txBit = State_data[0];
				if ((State_data[0] == 1))
				begin
					NextState_clockCounter = {
						{26{1'b0}},
						oneHigh
					}
					;
				end
				else
				begin
					NextState_clockCounter = {
						{28{1'b0}},
						zeroHigh
					}
					;
				end
			end
		end
		else if ((AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L146F17L162T27_Case == 1))
		begin
			if ((AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L147F25T48_Expr == 1))
			begin
				NextState_state = AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L148F21L161T22_AXI4WS2812Module_L149F43T58_Expr;
				NextState_data = AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L148F21L161T22_AXI4WS2812Module_L150F42T57_Expr;
				NextState_tx = AXI4WS2812Module_L151F40T45_Expr;
				if ((State_txBit == 1))
				begin
					NextState_clockCounter = {
						{27{1'b0}},
						oneLow
					}
					;
				end
				else
				begin
					NextState_clockCounter = {
						{26{1'b0}},
						zeroLow
					}
					;
				end
			end
		end
		else if ((AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L163F17L168T27_Case == 1))
		begin
			if ((AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L164F25T48_Expr == 1))
			begin
				if ((AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L165F21L167T22_AXI4WS2812Module_L166F25T35_AXI4WS2812Module_L100F9L122T10_AXI4WS2812Module_L101F17T37_Expr == 1))
				begin
					NextState_state = AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L165F21L167T22_AXI4WS2812Module_L166F25T35_AXI4WS2812Module_L100F9L122T10_AXI4WS2812Module_L102F13L105T14_AXI4WS2812Module_L103F35T51_Expr;
					NextState_txBit = AXI4WS2812Module_L104F35T40_Expr;
				end
				else
				begin
					NextState_txCounter = AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L165F21L167T22_AXI4WS2812Module_L166F25T35_AXI4WS2812Module_L100F9L122T10_AXI4WS2812Module_L107F13L121T14_AXI4WS2812Module_L108F39T66_Cast;
					NextState_state = AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L165F21L167T22_AXI4WS2812Module_L166F25T35_AXI4WS2812Module_L100F9L122T10_AXI4WS2812Module_L107F13L121T14_AXI4WS2812Module_L109F35T51_Expr;
					NextState_tx = AXI4WS2812Module_L110F32T36_Expr;
					NextState_txBit = State_data[0];
					if ((State_data[0] == 1))
					begin
						NextState_clockCounter = {
							{26{1'b0}},
							oneHigh
						}
						;
					end
					else
					begin
						NextState_clockCounter = {
							{28{1'b0}},
							zeroHigh
						}
						;
					end
				end
			end
		end
	end
	assign AXI4WS2812Module_L96F13T44_ExprLhs = {
		1'b0,
		State_state
	}
	;
	assign AXI4WS2812Module_L96F13T44_ExprRhs = {
		1'b0,
		AXI4WS2812Module_L96F28T44_Expr
	}
	;
	assign AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L129F17L131T27_CaseLhs = {
		1'b0,
		State_state
	}
	;
	assign AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L129F17L131T27_CaseRhs = {
		1'b0,
		AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L129F22T39_Expr
	}
	;
	assign AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L132F17L142T27_CaseLhs = {
		1'b0,
		State_state
	}
	;
	assign AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L132F17L142T27_CaseRhs = {
		1'b0,
		AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L132F22T38_Expr
	}
	;
	assign AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L143F17L145T27_CaseLhs = {
		1'b0,
		State_state
	}
	;
	assign AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L143F17L145T27_CaseRhs = {
		1'b0,
		AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L143F22T44_Expr
	}
	;
	assign AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L144F21T31_AXI4WS2812Module_L100F9L122T10_AXI4WS2812Module_L101F17T37_ExprLhs = {
		1'b0,
		State_txCounter
	}
	;
	assign AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L144F21T31_AXI4WS2812Module_L100F9L122T10_AXI4WS2812Module_L101F17T37_ExprRhs = {
		{8{1'b0}},
		AXI4WS2812Module_L101F36T37_Expr
	}
	;
	assign AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L146F17L162T27_CaseLhs = {
		1'b0,
		State_state
	}
	;
	assign AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L146F17L162T27_CaseRhs = {
		1'b0,
		AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L146F22T38_Expr
	}
	;
	assign AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L147F25T48_ExprLhs = {
		1'b0,
		State_clockCounter
	}
	;
	assign AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L147F25T48_ExprRhs = {
		{32{1'b0}},
		AXI4WS2812Module_L147F47T48_Expr
	}
	;
	assign AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L163F17L168T27_CaseLhs = {
		1'b0,
		State_state
	}
	;
	assign AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L163F17L168T27_CaseRhs = {
		1'b0,
		AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L163F22T37_Expr
	}
	;
	assign AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L164F25T48_ExprLhs = {
		1'b0,
		State_clockCounter
	}
	;
	assign AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L164F25T48_ExprRhs = {
		{32{1'b0}},
		AXI4WS2812Module_L164F47T48_Expr
	}
	;
	assign AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L165F21L167T22_AXI4WS2812Module_L166F25T35_AXI4WS2812Module_L100F9L122T10_AXI4WS2812Module_L101F17T37_ExprLhs = {
		1'b0,
		State_txCounter
	}
	;
	assign AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L165F21L167T22_AXI4WS2812Module_L166F25T35_AXI4WS2812Module_L100F9L122T10_AXI4WS2812Module_L101F17T37_ExprRhs = {
		{8{1'b0}},
		AXI4WS2812Module_L101F36T37_Expr
	}
	;
	assign AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L134F21L141T22_AXI4WS2812Module_L138F42T159_Expr_1 = AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L134F21L141T22_AXI4WS2812Module_L138F42T148_Source;
	assign AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L148F21L161T22_AXI4WS2812Module_L150F42T57_Expr_1 = State_data;
	assign AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L126F38T60_Expr_1 = {
		{2{1'b0}},
		State_clockCounter
	}
	;
	assign AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L126F38T60_Expr_2 = {
		{33{1'b0}},
		AXI4WS2812Module_L126F59T60_Expr
	}
	;
	assign AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L144F21T31_AXI4WS2812Module_L100F9L122T10_AXI4WS2812Module_L107F13L121T14_AXI4WS2812Module_L108F46T65_Expr_1 = {
		{2{1'b0}},
		State_txCounter
	}
	;
	assign AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L144F21T31_AXI4WS2812Module_L100F9L122T10_AXI4WS2812Module_L107F13L121T14_AXI4WS2812Module_L108F46T65_Expr_2 = {
		{9{1'b0}},
		AXI4WS2812Module_L108F64T65_Expr
	}
	;
	assign AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L165F21L167T22_AXI4WS2812Module_L166F25T35_AXI4WS2812Module_L100F9L122T10_AXI4WS2812Module_L107F13L121T14_AXI4WS2812Module_L108F46T65_Expr_1 = {
		{2{1'b0}},
		State_txCounter
	}
	;
	assign AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L165F21L167T22_AXI4WS2812Module_L166F25T35_AXI4WS2812Module_L100F9L122T10_AXI4WS2812Module_L107F13L121T14_AXI4WS2812Module_L108F46T65_Expr_2 = {
		{9{1'b0}},
		AXI4WS2812Module_L108F64T65_Expr
	}
	;
	assign Inputs_M2S_W_B_BREADY = M2S[221];
	assign Inputs_M2S_W_W_WVALID = M2S[220];
	assign Inputs_M2S_W_W_WUSER = M2S[219:212];
	assign Inputs_M2S_W_W_WLAST = M2S[211];
	assign Inputs_M2S_W_W_WSTRB = M2S[210:207];
	assign Inputs_M2S_W_W_WDATA[3] = M2S[206:199];
	assign Inputs_M2S_W_W_WDATA[2] = M2S[198:191];
	assign Inputs_M2S_W_W_WDATA[1] = M2S[190:183];
	assign Inputs_M2S_W_W_WDATA[0] = M2S[182:175];
	assign Inputs_M2S_W_W_WID = M2S[174:167];
	assign Inputs_M2S_W_AW_AWVALID = M2S[166];
	assign Inputs_M2S_W_AW_AWUSER = M2S[165:158];
	assign Inputs_M2S_W_AW_AWREGION = M2S[157:150];
	assign Inputs_M2S_W_AW_AWQOS = M2S[149:146];
	assign Inputs_M2S_W_AW_AWPROT = M2S[145:143];
	assign Inputs_M2S_W_AW_AWCACHE = M2S[142:139];
	assign Inputs_M2S_W_AW_AWLOCK = M2S[138:137];
	assign Inputs_M2S_W_AW_AWBURST = M2S[136:135];
	assign Inputs_M2S_W_AW_AWSIZE = M2S[134:132];
	assign Inputs_M2S_W_AW_AWLEN = M2S[131:124];
	assign Inputs_M2S_W_AW_AWADDR = M2S[123:92];
	assign Inputs_M2S_W_AW_AWID = M2S[91:84];
	assign Inputs_M2S_R_R_RREADY = M2S[83];
	assign Inputs_M2S_R_AR_ARVALID = M2S[82];
	assign Inputs_M2S_R_AR_ARUSER = M2S[81:74];
	assign Inputs_M2S_R_AR_ARREGION = M2S[73:66];
	assign Inputs_M2S_R_AR_ARQOS = M2S[65:62];
	assign Inputs_M2S_R_AR_ARPROT = M2S[61:59];
	assign Inputs_M2S_R_AR_ARCACHE = M2S[58:55];
	assign Inputs_M2S_R_AR_ARLOCK = M2S[54:53];
	assign Inputs_M2S_R_AR_ARBURST = M2S[52:51];
	assign Inputs_M2S_R_AR_ARSIZE = M2S[50:48];
	assign Inputs_M2S_R_AR_ARLEN = M2S[47:40];
	assign Inputs_M2S_R_AR_ARADDR = M2S[39:8];
	assign Inputs_M2S_R_AR_ARID = M2S[7:0];
	assign AXI4WS2812Module_L96F13T64_WhenTrue = AXI4WS2812Module_L96F47T54_Cast;
	assign AXI4WS2812Module_L96F13T64_WhenFalse = AXI4WS2812Module_L96F57T64_Cast;
	assign AXI4WS2812Module_L91F30L97T10_Source = {
		AXI4WS2812Module_L93F13T26_Expr,
		AXI4WS2812Module_L94F13T26_Expr,
		AXI4WS2812Module_L95F13T26_Expr,
		AXI4WS2812Module_L96F13T64_Ternary
	}
	;
	assign rData = {
		{21{1'b0}},
		AXI4WS2812Module_L91F30L97T10_Source
	}
	;
	assign AXI4WS2812Module_L76F37L85T14_Object[0] = AXI4WS2812Module_L79F29T33_Expr;
	assign AXI4WS2812Module_L76F37L85T14_Object[1] = AXI4WS2812Module_L81F29T33_Expr;
	assign AXI4WS2812Module_L76F37L85T14_Object[2] = AXI4WS2812Module_L83F28T32_Expr;
	assign AXI4WS2812Module_L76F37L85T14_Object[34:3] = rData;
	assign AXI4WS2812Module_L76F37L85T14_Object[35] = AXI4WS2812Module_L80F28T32_Expr;
	assign AXI4WS2812Module_L76F37L85T14_Object[36] = AXI4WS2812Module_L82F28T32_Expr;
	assign AXI4WS2812Module_L76F37L85T14_Object[44:37] = Inputs_M2S_R_AR_ARID;
	assign AXI4WS2812Module_L76F37L85T14_Object[76:45] = Inputs_M2S_R_AR_ARADDR;
	assign AXI4WS2812Module_L76F37L85T14_Object[84:77] = Inputs_M2S_R_AR_ARLEN;
	assign AXI4WS2812Module_L76F37L85T14_Object[87:85] = Inputs_M2S_R_AR_ARSIZE;
	assign AXI4WS2812Module_L76F37L85T14_Object[89:88] = Inputs_M2S_R_AR_ARBURST;
	assign AXI4WS2812Module_L76F37L85T14_Object[91:90] = Inputs_M2S_R_AR_ARLOCK;
	assign AXI4WS2812Module_L76F37L85T14_Object[95:92] = Inputs_M2S_R_AR_ARCACHE;
	assign AXI4WS2812Module_L76F37L85T14_Object[98:96] = Inputs_M2S_R_AR_ARPROT;
	assign AXI4WS2812Module_L76F37L85T14_Object[102:99] = Inputs_M2S_R_AR_ARQOS;
	assign AXI4WS2812Module_L76F37L85T14_Object[110:103] = Inputs_M2S_R_AR_ARREGION;
	assign AXI4WS2812Module_L76F37L85T14_Object[118:111] = Inputs_M2S_R_AR_ARUSER;
	assign AXI4WS2812Module_L76F37L85T14_Object[119] = Inputs_M2S_R_AR_ARVALID;
	assign AXI4WS2812Module_L76F37L85T14_Object[120] = Inputs_M2S_R_R_RREADY;
	assign AXI4WS2812Module_L76F37L85T14_Object[128:121] = Inputs_M2S_W_AW_AWID;
	assign AXI4WS2812Module_L76F37L85T14_Object[160:129] = Inputs_M2S_W_AW_AWADDR;
	assign AXI4WS2812Module_L76F37L85T14_Object[168:161] = Inputs_M2S_W_AW_AWLEN;
	assign AXI4WS2812Module_L76F37L85T14_Object[171:169] = Inputs_M2S_W_AW_AWSIZE;
	assign AXI4WS2812Module_L76F37L85T14_Object[173:172] = Inputs_M2S_W_AW_AWBURST;
	assign AXI4WS2812Module_L76F37L85T14_Object[175:174] = Inputs_M2S_W_AW_AWLOCK;
	assign AXI4WS2812Module_L76F37L85T14_Object[179:176] = Inputs_M2S_W_AW_AWCACHE;
	assign AXI4WS2812Module_L76F37L85T14_Object[182:180] = Inputs_M2S_W_AW_AWPROT;
	assign AXI4WS2812Module_L76F37L85T14_Object[186:183] = Inputs_M2S_W_AW_AWQOS;
	assign AXI4WS2812Module_L76F37L85T14_Object[194:187] = Inputs_M2S_W_AW_AWREGION;
	assign AXI4WS2812Module_L76F37L85T14_Object[202:195] = Inputs_M2S_W_AW_AWUSER;
	assign AXI4WS2812Module_L76F37L85T14_Object[203] = Inputs_M2S_W_AW_AWVALID;
	assign AXI4WS2812Module_L76F37L85T14_Object[211:204] = Inputs_M2S_W_W_WID;
	assign AXI4WS2812Module_L76F37L85T14_Object[243:212] = {
		Inputs_M2S_W_W_WDATA[3],
		Inputs_M2S_W_W_WDATA[2],
		Inputs_M2S_W_W_WDATA[1],
		Inputs_M2S_W_W_WDATA[0]
	}
	;
	assign AXI4WS2812Module_L76F37L85T14_Object[247:244] = Inputs_M2S_W_W_WSTRB;
	assign AXI4WS2812Module_L76F37L85T14_Object[248] = Inputs_M2S_W_W_WLAST;
	assign AXI4WS2812Module_L76F37L85T14_Object[256:249] = Inputs_M2S_W_W_WUSER;
	assign AXI4WS2812Module_L76F37L85T14_Object[257] = Inputs_M2S_W_W_WVALID;
	assign AXI4WS2812Module_L76F37L85T14_Object[258] = Inputs_M2S_W_B_BREADY;
	assign axiSlave_M2S = AXI4WS2812Module_L76F37L85T14_Object[258:37];
	assign axiSlave_inWREADY = AXI4WS2812Module_L76F37L85T14_Object[36];
	assign axiSlave_inRVALID = AXI4WS2812Module_L76F37L85T14_Object[35];
	assign axiSlave_inRDATA[3] = AXI4WS2812Module_L76F37L85T14_Object[34:27];
	assign axiSlave_inRDATA[2] = AXI4WS2812Module_L76F37L85T14_Object[26:19];
	assign axiSlave_inRDATA[1] = AXI4WS2812Module_L76F37L85T14_Object[18:11];
	assign axiSlave_inRDATA[0] = AXI4WS2812Module_L76F37L85T14_Object[10:3];
	assign axiSlave_inBVALID = AXI4WS2812Module_L76F37L85T14_Object[2];
	assign axiSlave_inAWREADY = AXI4WS2812Module_L76F37L85T14_Object[1];
	assign axiSlave_inARREADY = AXI4WS2812Module_L76F37L85T14_Object[0];
	assign AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L134F21L141T22_AXI4WS2812Module_L138F42T148_Source = {
		axiSlave_outWDATA[1],
		axiSlave_outWDATA[2],
		axiSlave_outWDATA[0]
	}
	;
	assign AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L144F21T31_AXI4WS2812Module_L100F9L122T10_AXI4WS2812Module_L107F13L121T14_AXI4WS2812Module_L108F39T66_Cast = AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L144F21T31_AXI4WS2812Module_L100F9L122T10_AXI4WS2812Module_L107F13L121T14_AXI4WS2812Module_L108F46T65_Expr[7:0];
	assign AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L165F21L167T22_AXI4WS2812Module_L166F25T35_AXI4WS2812Module_L100F9L122T10_AXI4WS2812Module_L107F13L121T14_AXI4WS2812Module_L108F39T66_Cast = AXI4WS2812Module_L125F9L170T10_AXI4WS2812Module_L127F13L169T14_AXI4WS2812Module_L165F21L167T22_AXI4WS2812Module_L166F25T35_AXI4WS2812Module_L100F9L122T10_AXI4WS2812Module_L107F13L121T14_AXI4WS2812Module_L108F46T65_Expr[7:0];
	assign oS2M = axiSlave_S2M;
	assign oTX = State_tx;
	assign oTXBit = State_txBit;
	assign axiSlave_inARREADY_axiSlave_inARREADY_HardLink = axiSlave_inARREADY;
	assign axiSlave_inAWREADY_axiSlave_inAWREADY_HardLink = axiSlave_inAWREADY;
	assign axiSlave_inBVALID_axiSlave_inBVALID_HardLink = axiSlave_inBVALID;
	assign axiSlave_inRDATA0_axiSlave_inRDATA_HardLink = axiSlave_inRDATA[0];
	assign axiSlave_inRDATA1_axiSlave_inRDATA_HardLink = axiSlave_inRDATA[1];
	assign axiSlave_inRDATA2_axiSlave_inRDATA_HardLink = axiSlave_inRDATA[2];
	assign axiSlave_inRDATA3_axiSlave_inRDATA_HardLink = axiSlave_inRDATA[3];
	assign axiSlave_inRVALID_axiSlave_inRVALID_HardLink = axiSlave_inRVALID;
	assign axiSlave_inWREADY_axiSlave_inWREADY_HardLink = axiSlave_inWREADY;
	assign axiSlave_M2S_axiSlave_M2S_HardLink = axiSlave_M2S;
	assign axiSlave_outARADDR = axiSlave_outARADDR_axiSlave_outARADDR_HardLink;
	assign axiSlave_outARREADYConfirming = axiSlave_outARREADYConfirming_axiSlave_outARREADYConfirming_HardLink;
	assign axiSlave_outARVALID = axiSlave_outARVALID_axiSlave_outARVALID_HardLink;
	assign axiSlave_outAWADDR = axiSlave_outAWADDR_axiSlave_outAWADDR_HardLink;
	assign axiSlave_outAWREADYConfirming = axiSlave_outAWREADYConfirming_axiSlave_outAWREADYConfirming_HardLink;
	assign axiSlave_outAWVALID = axiSlave_outAWVALID_axiSlave_outAWVALID_HardLink;
	assign axiSlave_outReadTXCompleting = axiSlave_outReadTXCompleting_axiSlave_outReadTXCompleting_HardLink;
	assign axiSlave_outWDATA[0] = axiSlave_outWDATA0_axiSlave_outWDATA_HardLink;
	assign axiSlave_outWDATA[1] = axiSlave_outWDATA1_axiSlave_outWDATA_HardLink;
	assign axiSlave_outWDATA[2] = axiSlave_outWDATA2_axiSlave_outWDATA_HardLink;
	assign axiSlave_outWDATA[3] = axiSlave_outWDATA3_axiSlave_outWDATA_HardLink;
	assign axiSlave_outWREADYConfirming = axiSlave_outWREADYConfirming_axiSlave_outWREADYConfirming_HardLink;
	assign axiSlave_outWriteTXCompleting = axiSlave_outWriteTXCompleting_axiSlave_outWriteTXCompleting_HardLink;
	assign axiSlave_outWSTRB = axiSlave_outWSTRB_axiSlave_outWSTRB_HardLink;
	assign axiSlave_outWVALID = axiSlave_outWVALID_axiSlave_outWVALID_HardLink;
	assign axiSlave_S2M = axiSlave_S2M_axiSlave_S2M_HardLink;
	// [BEGIN USER ARCHITECTURE]
	// [END USER ARCHITECTURE]
endmodule
